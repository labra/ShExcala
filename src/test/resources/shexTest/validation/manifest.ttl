@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:     <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix sht:     <http://www.w3.org/ns/shacl/test-suite#> .

# TODO:
#   repeated OR
#   1dotRefOr3 on..


<> a mf:Manifest ;
    rdfs:comment "ShEx validation tests" ;
    mf:entries
    (
        #empty
        <#0_empty>
        <#0_other>

        # triple pattern
        <#1dot_fail-empty>
        <#1dot_fail-missing>
        <#1dot_pass-noOthers>
        <#1dot_pass-others_lexicallyEarlier>
        <#1dot_pass-others_lexicallyLater>
        # 1dotComma_... same as 1dot
        <#1inversedot_fail-empty>
        <#1inversedot_fail-missing>
        <#1inversedot_pass-noOthers>
        <#1inversedot_pass-over_lexicallyEarlier>
        <#1inversedot_pass-over_lexicallyLater>
        <#1negateddot_pass-empty>
        <#1negateddot_pass-missing>
        <#1negateddot_fail-noOthers>
        <#1negateddot_fail-others_lexicallyEarlier>
        <#1negateddot_fail-others_lexicallyLater>
        <#1negatedinversedot_pass-empty>
        <#1negatedinversedot_pass-missing>
        <#1negatedinversedot_fail-noOthers>
        <#1negatedinversedot_fail-others_lexicallyEarlier>
        <#1negatedinversedot_fail-others_lexicallyLater>
        # 1inversenegateddot_... same as 1negatedinversedot
        <#1Adot_pass>

        # annotations
        <#1dotAnnotIRIREF_pass>
        <#1dotAnnotIRIREF_missing>
        <#1dotAnnotSTRING_LITERAL1_pass>
        <#1dotAnnot3_pass>
        <#1dotAnnot3_missing>
        <#1inversedotAnnot3_pass>
        <#1inversedotAnnot3_missing>

        # semantic actions
        <#1dotCode1_pass>
        <#1inversedotCode1_pass>
        <#1dotCode3_pass>
        <#1dotCode3fail_abort>
        <#1dotCodeWithEscapes1_pass>
        <#1dotShapeCode1_pass>
        <#open3groupdotcloseCode1-p1p2p3>
        <#startCode1_pass>
        <#startCode1fail_abort>
        <#startCode1startRef_pass>
        <#startCode1startReffail_abort>
        <#startCode3_pass>
        <#startCode3fail_abort>

        # annotations + semantic actions
        <#open3groupdotclosecard23Annot3Code2-p1p2p3X3>

        # cardinality
        <#1card2_fail0>
        <#1card2_fail1>
        <#1card2_pass2>
        <#1card2_fail3>
        <#1card25_fail0>
        <#1card25_fail1>
        <#1card25_pass2>
        <#1card25_pass3>
        <#1card25_pass4>
        <#1card25_pass5>
        <#1card25_fail6>
        <#1card2Star_fail0>
        <#1card2Star_fail1>
        <#1card2Star_pass2>
        <#1card2Star_pass3>
        <#1card2Star_pass6>
        # 1card2blank_... same as 1card2Star
        <#1cardOpt_pass0>
        <#1cardOpt_pass1>
        <#1cardOpt_fail2>
        <#1cardOpt_pass6>
        <#1cardPlus_fail0>
        <#1cardPlus_pass1>
        <#1cardPlus_pass2>
        <#1cardPlus_pass6>
        <#1cardStar_pass0>
        <#1cardStar_pass1>
        <#1cardStar_pass2>
        <#1cardStar_pass6>

        # datatype
        <#1datatype_missing>
        <#1datatype_nonLiteral>
        <#1datatype_wrongDatatype>
        <#1datatype_pass>

        # facets
	## manual
        <#1datatypeLength_fail-missing>
        <#1datatypeLength_fail-wrongDatatype>
        <#1datatypeLength_fail-short>
        <#1datatypeLength_pass>
        <#1datatypeLength_fail-long>
        <#1literalFractiondigits_fail-short>
        <#1literalFractiondigits_pass>
        <#1literalFractiondigits_fail-long>
        <#1floatMininclusiveINTEGER_fail-low>
        <#1floatMininclusiveINTEGER_pass-equalLead>
        <#1floatMininclusiveINTEGER_pass-equalTrail>
        <#1floatMininclusiveINTEGER_pass-high>
        <#1floatMininclusiveINTEGERLead_pass-equal>
        <#1integerMininclusiveINTEGER_fail-low>
        <#1integerMininclusiveINTEGER_pass-equal>
        <#1integerMininclusiveINTEGER_pass-equalLead>
        <#1integerMininclusiveINTEGER_pass-high>

	## generated
        <#1integerMininclusiveINTEGER_fail-integer-low>
        <#1integerMininclusiveINTEGER_pass-integer-equal>
        <#1integerMininclusiveINTEGER_pass-integer-high>
        <#1integerMininclusiveINTEGERLead_fail-integer-low>
        <#1integerMininclusiveINTEGERLead_pass-integer-equal>
        <#1integerMininclusiveINTEGERLead_pass-integer-equalLead>
        <#1integerMininclusiveINTEGERLead_pass-integer-high>
        <#1integerMininclusiveDECIMAL_pass-integer-equal>
        <#1integerMininclusiveDECIMALLeadTrail_fail-integer-low>
        <#1integerMininclusiveDECIMALLeadTrail_pass-integer-equal>
        <#1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead>
        <#1integerMininclusiveDECIMALLeadTrail_pass-integer-high>
        <#1integerMininclusiveDECIMALint_fail-integer-low>
        <#1integerMininclusiveDECIMALint_pass-integer-equal>
        <#1integerMininclusiveDECIMALint_pass-integer-high>
        <#1integerMininclusiveDECIMALintLeadTrail_fail-integer-low>
        <#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal>
        <#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead>
        <#1integerMininclusiveDECIMALintLeadTrail_pass-integer-high>
        <#1integerMininclusiveDOUBLE_pass-integer-equal>
        <#1integerMininclusiveDOUBLELeadTrail_fail-integer-low>
        <#1integerMininclusiveDOUBLELeadTrail_pass-integer-equal>
        <#1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead>
        <#1integerMininclusiveDOUBLELeadTrail_pass-integer-high>
        <#1integerMininclusiveDOUBLEint_pass-integer-equal>
        <#1integerMininclusiveDOUBLEintLeadTrail_fail-integer-low>
        <#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal>
        <#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead>
        <#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high>
        <#1integerMininclusiveINTEGER_fail-decimal-equal>
        <#1integerMininclusiveINTEGER_fail-float-equal>
        <#1integerMininclusiveINTEGER_fail-double-equal>
        <#1integerMininclusiveINTEGER_fail-dateTime-equal>
        <#1integerMininclusiveINTEGER_fail-string-equal>
        <#1integerMininclusiveINTEGER_fail-byte-equal>
        <#1integerMininclusivexsd-integer_fail-integer-low>
        <#1integerMininclusivexsd-integer_pass-integer-equal>
        <#1decimalMininclusiveINTEGER_fail-decimal-low>
        <#1decimalMininclusiveINTEGER_pass-decimal-high>
        <#1decimalMininclusiveINTEGERLead_fail-decimal-low>
        <#1decimalMininclusiveINTEGERLead_pass-decimal-high>
        <#1decimalMininclusiveDECIMAL_fail-decimal-low>
        <#1decimalMininclusiveDECIMAL_pass-decimal-equal>
        <#1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail>
        <#1decimalMininclusiveDECIMAL_pass-decimal-high>
        <#1decimalMininclusiveDECIMALLeadTrail_fail-decimal-low>
        <#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal>
        <#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail>
        <#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high>
        <#1decimalMininclusiveDECIMALintLeadTrail_fail-decimal-low>
        <#1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high>
        <#1decimalMininclusiveDOUBLE_fail-decimal-low>
        <#1decimalMininclusiveDOUBLE_pass-decimal-equal>
        <#1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail>
        <#1decimalMininclusiveDOUBLELeadTrail_fail-decimal-low>
        <#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal>
        <#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail>
        <#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high>
        <#1decimalMininclusiveDOUBLEintLeadTrail_fail-decimal-low>
        <#1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high>
        <#1decimalMininclusiveDECIMAL_fail-float-equal>
        <#1decimalMininclusiveDECIMAL_fail-double-equal>
        <#1decimalMininclusivexsd-decimal_fail-decimal-low>
        <#1decimalMininclusivexsd-decimal_pass-decimal-equal>
        <#1floatMininclusiveINTEGERLead_fail-float-low>
        <#1floatMininclusiveINTEGERLead_pass-float-high>
        <#1floatMininclusiveDECIMAL_pass-float-equal>
        <#1floatMininclusiveDECIMAL_pass-float-equalLeadTrail>
        <#1floatMininclusiveDECIMALLeadTrail_fail-float-low>
        <#1floatMininclusiveDECIMALLeadTrail_pass-float-equal>
        <#1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail>
        <#1floatMininclusiveDECIMALLeadTrail_pass-float-high>
        <#1floatMininclusiveDECIMALintLeadTrail_fail-float-low>
        <#1floatMininclusiveDECIMALintLeadTrail_pass-float-high>
        <#1floatMininclusiveDOUBLE_pass-float-equal>
        <#1floatMininclusiveDOUBLE_pass-float-equalLeadTrail>
        <#1floatMininclusiveDOUBLELeadTrail_fail-float-low>
        <#1floatMininclusiveDOUBLELeadTrail_pass-float-equal>
        <#1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail>
        <#1floatMininclusiveDOUBLELeadTrail_pass-float-high>
        <#1floatMininclusiveDOUBLEintLeadTrail_fail-float-low>
        <#1floatMininclusiveDOUBLEintLeadTrail_pass-float-high>
        <#1floatMininclusivexsd-float_fail-float-low>
        <#1floatMininclusivexsd-float_pass-float-equal>
        <#1doubleMininclusiveINTEGERLead_fail-double-low>
        <#1doubleMininclusiveINTEGERLead_pass-double-high>
        <#1doubleMininclusiveDECIMAL_pass-double-equal>
        <#1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail>
        <#1doubleMininclusiveDECIMALLeadTrail_fail-double-low>
        <#1doubleMininclusiveDECIMALLeadTrail_pass-double-equal>
        <#1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail>
        <#1doubleMininclusiveDECIMALLeadTrail_pass-double-high>
        <#1doubleMininclusiveDECIMALintLeadTrail_fail-double-low>
        <#1doubleMininclusiveDECIMALintLeadTrail_pass-double-high>
        <#1doubleMininclusiveDOUBLE_pass-double-equal>
        <#1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail>
        <#1doubleMininclusiveDOUBLELeadTrail_fail-double-low>
        <#1doubleMininclusiveDOUBLELeadTrail_pass-double-equal>
        <#1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail>
        <#1doubleMininclusiveDOUBLELeadTrail_pass-double-high>
        <#1doubleMininclusiveDOUBLEintLeadTrail_fail-double-low>
        <#1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high>
        <#1doubleMininclusivexsd-double_fail-double-low>
        <#1doubleMininclusivexsd-double_pass-double-equal>
        <#1integerMinexclusiveINTEGER_fail-integer-low>
        <#1integerMinexclusiveINTEGER_fail-integer-equal>
        <#1integerMinexclusiveINTEGER_pass-integer-high>
        <#1integerMinexclusiveDECIMALint_fail-integer-low>
        <#1integerMinexclusiveDECIMALint_fail-integer-equal>
        <#1integerMinexclusiveDECIMALint_pass-integer-high>
        <#1integerMinexclusiveDOUBLEint_fail-integer-low>
        <#1integerMinexclusiveDOUBLEint_fail-integer-equal>
        <#1integerMinexclusiveDOUBLEint_pass-integer-high>
        <#1decimalMinexclusiveINTEGER_fail-decimal-low>
        <#1decimalMinexclusiveINTEGER_pass-decimal-high>
        <#1decimalMinexclusiveDECIMAL_fail-decimal-low>
        <#1decimalMinexclusiveDECIMAL_fail-decimal-equal>
        <#1decimalMinexclusiveDECIMAL_pass-decimal-high>
        <#1decimalMinexclusiveDOUBLE_fail-decimal-low>
        <#1decimalMinexclusiveDOUBLE_fail-decimal-equal>
        <#1decimalMinexclusiveDOUBLE_pass-decimal-high>
        <#1decimalMinexclusiveDECIMAL_fail-float-equal>
        <#1decimalMinexclusiveDECIMAL_fail-double-equal>
        <#1floatMinexclusiveINTEGER_fail-float-low>
        <#1floatMinexclusiveINTEGER_pass-float-high>
        <#1floatMinexclusiveDECIMAL_fail-float-low>
        <#1floatMinexclusiveDECIMAL_fail-float-equal>
        <#1floatMinexclusiveDECIMAL_pass-float-high>
        <#1floatMinexclusiveDOUBLE_fail-float-low>
        <#1floatMinexclusiveDOUBLE_fail-float-equal>
        <#1floatMinexclusiveDOUBLE_pass-float-high>
        <#1floatMinexclusivexsd-float_fail-decimal-equal>
        <#1floatMinexclusivexsd-float_fail-double-equal>
        <#1doubleMinexclusiveINTEGER_fail-double-low>
        <#1doubleMinexclusiveINTEGER_pass-double-high>
        <#1doubleMinexclusiveDECIMAL_fail-double-low>
        <#1doubleMinexclusiveDECIMAL_fail-double-equal>
        <#1doubleMinexclusiveDECIMAL_pass-double-high>
        <#1doubleMinexclusiveDOUBLE_fail-double-low>
        <#1doubleMinexclusiveDOUBLE_fail-double-equal>
        <#1doubleMinexclusiveDOUBLE_pass-double-high>
        <#1doubleMinexclusiveDECIMAL_fail-float-equal>
        <#1integerMaxinclusiveINTEGER_pass-integer-low>
        <#1integerMaxinclusiveINTEGER_pass-integer-equal>
        <#1integerMaxinclusiveINTEGER_fail-integer-high>
        <#1integerMaxinclusiveDECIMALint_pass-integer-low>
        <#1integerMaxinclusiveDECIMALint_pass-integer-equal>
        <#1integerMaxinclusiveDECIMALint_fail-integer-high>
        <#1integerMaxinclusiveDOUBLEint_pass-integer-low>
        <#1integerMaxinclusiveDOUBLEint_pass-integer-equal>
        <#1integerMaxinclusiveDOUBLEint_fail-integer-high>
        <#1decimalMaxinclusiveINTEGER_pass-decimal-low>
        <#1decimalMaxinclusiveINTEGER_fail-decimal-high>
        <#1decimalMaxinclusiveDECIMAL_pass-decimal-low>
        <#1decimalMaxinclusiveDECIMAL_pass-decimal-equal>
        <#1decimalMaxinclusiveDECIMAL_fail-decimal-high>
        <#1decimalMaxinclusiveDOUBLE_pass-decimal-low>
        <#1decimalMaxinclusiveDOUBLE_pass-decimal-equal>
        <#1decimalMaxinclusiveDOUBLE_fail-decimal-high>
        <#1decimalMaxinclusiveDECIMAL_fail-float-equal>
        <#1decimalMaxinclusiveDECIMAL_fail-double-equal>
        <#1floatMaxinclusiveINTEGER_pass-float-low>
        <#1floatMaxinclusiveINTEGER_fail-float-high>
        <#1floatMaxinclusiveDECIMAL_pass-float-low>
        <#1floatMaxinclusiveDECIMAL_pass-float-equal>
        <#1floatMaxinclusiveDECIMAL_fail-float-high>
        <#1floatMaxinclusiveDOUBLE_pass-float-low>
        <#1floatMaxinclusiveDOUBLE_pass-float-equal>
        <#1floatMaxinclusiveDOUBLE_fail-float-high>
        <#1floatMaxinclusivexsd-float_fail-decimal-equal>
        <#1floatMaxinclusivexsd-float_fail-double-equal>
        <#1doubleMaxinclusiveINTEGER_pass-double-low>
        <#1doubleMaxinclusiveINTEGER_fail-double-high>
        <#1doubleMaxinclusiveDECIMAL_pass-double-low>
        <#1doubleMaxinclusiveDECIMAL_pass-double-equal>
        <#1doubleMaxinclusiveDECIMAL_fail-double-high>
        <#1doubleMaxinclusiveDOUBLE_pass-double-low>
        <#1doubleMaxinclusiveDOUBLE_pass-double-equal>
        <#1doubleMaxinclusiveDOUBLE_fail-double-high>
        <#1doubleMaxinclusiveDECIMAL_fail-float-equal>
        <#1integerMaxexclusiveINTEGER_pass-integer-low>
        <#1integerMaxexclusiveINTEGER_fail-integer-equal>
        <#1integerMaxexclusiveINTEGER_fail-integer-high>
        <#1integerMaxexclusiveDECIMALint_pass-integer-low>
        <#1integerMaxexclusiveDECIMALint_fail-integer-equal>
        <#1integerMaxexclusiveDECIMALint_fail-integer-high>
        <#1integerMaxexclusiveDOUBLEint_pass-integer-low>
        <#1integerMaxexclusiveDOUBLEint_fail-integer-equal>
        <#1integerMaxexclusiveDOUBLEint_fail-integer-high>
        <#1decimalMaxexclusiveINTEGER_pass-decimal-low>
        <#1decimalMaxexclusiveINTEGER_fail-decimal-high>
        <#1decimalMaxexclusiveDECIMAL_pass-decimal-low>
        <#1decimalMaxexclusiveDECIMAL_fail-decimal-equal>
        <#1decimalMaxexclusiveDECIMAL_fail-decimal-high>
        <#1decimalMaxexclusiveDOUBLE_pass-decimal-low>
        <#1decimalMaxexclusiveDOUBLE_fail-decimal-equal>
        <#1decimalMaxexclusiveDOUBLE_fail-decimal-high>
        <#1decimalMaxexclusiveDECIMAL_fail-float-equal>
        <#1decimalMaxexclusiveDECIMAL_fail-double-equal>
        <#1decimalMaxexclusivexsd-byte_fail-byte-equal>
        <#1decimalMaxexclusivexsd-decimal_fail-decimal-equal>
        <#1floatMaxexclusiveINTEGER_pass-float-low>
        <#1floatMaxexclusiveINTEGER_fail-float-high>
        <#1floatMaxexclusiveDECIMAL_pass-float-low>
        <#1floatMaxexclusiveDECIMAL_fail-float-high>
        <#1floatMaxexclusiveDOUBLE_pass-float-low>
        <#1floatMaxexclusiveDOUBLE_fail-float-high>
        <#1doubleMaxexclusiveINTEGER_pass-double-low>
        <#1doubleMaxexclusiveINTEGER_fail-double-equal>
        <#1doubleMaxexclusiveINTEGER_fail-double-high>
        <#1doubleMaxexclusiveINTEGERLead_fail-double-equal>
        <#1doubleMaxexclusiveDECIMAL_pass-double-low>
        <#1doubleMaxexclusiveDECIMAL_fail-double-equal>
        <#1doubleMaxexclusiveDECIMAL_fail-double-high>
        <#1doubleMaxexclusiveDECIMALLeadTrail_fail-double-equal>
        <#1doubleMaxexclusiveDECIMALint_fail-double-equal>
        <#1doubleMaxexclusiveDECIMALintLeadTrail_fail-double-equal>
        <#1doubleMaxexclusiveDOUBLE_pass-double-low>
        <#1doubleMaxexclusiveDOUBLE_fail-double-equal>
        <#1doubleMaxexclusiveDOUBLE_fail-double-high>
        <#1doubleMaxexclusiveDOUBLELeadTrail_fail-double-equal>
        <#1doubleMaxexclusiveDOUBLEint_fail-double-equal>
        <#1doubleMaxexclusiveDOUBLEintLeadTrail_fail-double-equal>

        # closed
        <#1dotClosed_pass>
        <#1dotClosed_fail_lower>
        <#1dotClosed_fail_higher>

        # node kinds
        <#1literalPlus_Is1_Ip1_La,Io1>

        # extra
        <#1val1IRIREFExtra1_iri>
        <#1val2IRIREFExtra1_iri>
        <#1val2IRIREFExtra1_bnode>

        # shape reference
        <#1dotRef1_referent,referrer>
        <#1dotRef1_referrer,referent>
        <#1dotRef1_missingReferent>
        <#1dotRef1_overReferrer>
        <#1dotRef1_overReferrer,overReferent>
        <#1dotRef1_overMatchesReferent>

        # algebraic operations
        <#1dotOr2dot_pass_p1>
        <#1dotOr2dot_pass_p2p3>
        <#1dotOr2dot_fail_p1p2p3>
        # open1dotOropen2dotcloseclose_... same as 1dotOr2dot
        # @@ eliminate as duplicate?
        <#open1dotOropen2dotcloseclose_pass_p1>
        <#open1dotOropen2dotcloseclose_pass_p2p3>
        <#open1dotOropen2dotcloseclose_fail_p1p2p3>
        # 1dotCommaOr2dotCommas_... same as 1dotOr2dot
        # open1dotCommaOr2dotcommasclose_... same as 1dotOr2dot
        # open1dotCommaOropen2dotCommascloseclose_... same as 1dotOr2dot
        # open1dotOr2dotclose_... same as 1dotOr2dot
	<#openopen1dotOr1dotclose1dotclose_pass_p1p3>
	<#openopen1dotOr1dotclose1dotclose_pass_p2p3>
	<#openopen1dotOr1dotclose1dotclose_fail_p1>
	<#openopen1dotOr1dotclose1dotclose_fail_p3>
	<#openopen1dotOr1dotclose1dotclose_fail_p1p2>
        # openopen1dotCommaOr1dotCommaclose1dotCommacloseComma_... same as openopen1dotOr1dotclose1dotclose

        # value sets
        <#1val1dotMinusiri3_pass>
        <#1val1dotMinusiri3_v1>
        <#1val1dotMinusiri3_v2>
        <#1val1dotMinusiri3_v3>
        <#1val1dotMinusiriStem3_pass>
        <#1val1dotMinusiriStem3_v1>
        <#1val1dotMinusiriStem3_v2>
        <#1val1dotMinusiriStem3_v3>
        <#1val1dotMinusiriStem3_v1a>
        <#1val1iriStem_passv1>
        <#1val1iriStem_passv1a>
        <#1val1iriStem_fail>
        <#1val1iriStemMinusiri3_passIv>
        <#1val1iriStemMinusiri3_passIv4>
        <#1val1iriStemMinusiri3_v1>
        <#1val1iriStemMinusiri3_v2>
        <#1val1iriStemMinusiri3_v3>
        <#1val1iriStemMinusiri3_passIv1a>
        <#1val1iriStemMinusiriStem3_passIv>
        <#1val1iriStemMinusiriStem3_passIv4>
        <#1val1iriStemMinusiriStem3_v1>
        <#1val1iriStemMinusiriStem3_v2>
        <#1val1iriStemMinusiriStem3_v3>
        <#1val1iriStemMinusiriStem3_v1a>

        # term equivalence
        <#1val1IRIREF_pass>
        <#1val1IRIREF_v2>
        <#1val1DOUBLE_pass>
        <#1val1DOUBLE_passUC>
        <#1val1DOUBLE_0_0e0>
        # 1val1DOUBLElowercase_... same as 1val1DOUBLE
        # @@ eliminate as duplicate?
        <#1val1DOUBLElowercase_pass>
        <#1val1DOUBLElowercase_passUC>
        <#1val1DOUBLElowercase_0_0e0>
        <#1val1true_pass>
        <#1val1true_false>
        <#1val1true_ab>
        <#1val1false_pass>
        <#1val1false_true>
        <#1val1false_ab>

        # numerics
        <#1val1INTEGER_pass>
        <#1val1INTEGER_00>
        <#1val1INTEGER_Lab>

        # datatypes
        <#1val1IRIREFDatatype_pass>
        <#1val1IRIREFDatatype_Lab>
        <#1val1IRIREFDatatype_LabDTbloodType999>
        <#1val1IRIREFDatatype_LaDTbloodType>
        # 1val1LNDatatype_... same as 1val1IRIREFDatatype except prefixes

        # language tags
        <#1val1LANGTAG_pass>
        <#1val1LANGTAG_Lab>
        <#1val1LANGTAG_LabLTen>
        <#1val1LANGTAG_LabLTen-fr-jura>
        <#1val1LANGTAG_LaLTen-fr>

        # AND valueExpr
	<#1val1vExprANDRef3_pass>
	<#1val1vExprANDRef3_failvc1>
	<#1val1vExprANDRef3_failvc2>
	<#1val1vExprANDRef3_failvc3>
	<#1val1vExprRefAND3_pass>
	<#1val1vExprRefAND3_failvc3>
	<#1val1vExprRefAND3_failvc2>
	<#1val1vExprRefAND3_failvc1>
	<#1val1vExprAND3_pass>
	<#1val1vExprAND3_failvc1>
	<#1val1vExprAND3_failvc2>
	<#1val1vExprAND3_failvc3>

        # OR valueExpr
        <#1val1vExprORRef3_fail>
        <#1val1vExprORRef3_passvc1>
        <#1val1vExprORRef3_passvc2>
        <#1val1vExprORRef3_passvc3>
        <#1val1vExprORRef3_passvc1vc2vc3>
	<#1val1vExprRefOR3_passvc1vc2vc3>
	<#1val1vExprRefOR3_passvc3>
	<#1val1vExprRefOR3_passvc2>
	<#1val1vExprRefOR3_passvc1>
	<#1val1vExprRefOR3_fail>
        <#1val1vExprOR3_fail>
        <#1val1vExprOR3_passvc1>
        <#1val1vExprOR3_passvc2>
        <#1val1vExprOR3_passvc3>
        <#1val1vExprOR3_passvc1vc2vc3>

        # <#*Inherit*>
        # <#*Inline*>
        # <#*LN*>
        # <#*NS*>
        # <#1bnodeLength>
        # <#1bnodeMaxlength>
        # <#1bnodeMinlength>
        # <#1bnodePattern>

        # manual schemas
        <#iovka>
        <#greedy>
        <#skipped>
        <#repeated-group>
        <#simple-group>
    ) .

# empty {
<#0_empty> a sht:ValidationTest ;
    mf:name "0_empty" ;
    rdfs:comment "<S> {  } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/0.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/dummy>
    ] ;
    mf:result <0_dummy.val>
    .

<#0_other> a sht:ValidationTest ;
    mf:name "0_other" ;
    rdfs:comment "<S> {  } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/0.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <0_pass.val>
    .
# } empty

# triple pattern {

<#1dot_fail-empty> a sht:ValidationFailure ;
    mf:name "1dot_fail-empty" ;
    rdfs:comment "<S> { <p1> . } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot_fail-missing> a sht:ValidationFailure ;
    mf:name "1dot_fail-missing" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dot_pass-noOthers> a sht:ValidationTest ;
    mf:name "1dot_pass-noOthers" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dot_pass.val>
    .

<#1dot_pass-others_lexicallyEarlier> a sht:ValidationTest ;
    mf:name "1dot_pass-others_lexicallyEarlier" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p0> <o0>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dot_pass.val>
    .

<#1dot_pass-others_lexicallyLater> a sht:ValidationTest ;
    mf:name "1dot_pass-others_lexicallyLater" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p2> <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1;Ip2_Io2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dot_pass.val>
    .

<#1inversedot_fail-empty> a sht:ValidationFailure ;
    mf:name "1inversedot_fail-empty" ;
    rdfs:comment "<S> { <p1> . } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

<#1inversedot_fail-missing> a sht:ValidationFailure ;
    mf:name "1inversedot_fail-missing" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

<#1inversedot_pass-noOthers> a sht:ValidationTest ;
    mf:name "1inversedot_pass-noOthers" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    mf:result <1inversedot_pass.val>
    .

<#1inversedot_pass-over_lexicallyEarlier> a sht:ValidationTest ;
    mf:name "1inversedot_pass-over_lexicallyEarlier" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p0> <o0>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    mf:result <1inversedot_pass.val>
    .

<#1inversedot_pass-over_lexicallyLater> a sht:ValidationTest ;
    mf:name "1inversedot_pass-over_lexicallyLater" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p2> <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1;Ip2_Io2.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    mf:result <1inversedot_pass.val>
    .

<#1negateddot_pass-empty> a sht:ValidationTest ;
    mf:name "1negateddot_pass-empty" ;
    rdfs:comment "<S> { !<p1> . } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negateddot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1negateddot_pass.val>
    .

<#1negateddot_pass-missing> a sht:ValidationTest ;
    mf:name "1negateddot_pass-missing" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negateddot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1negateddot_pass.val>
    .

<#1negateddot_fail-noOthers> a sht:ValidationFailure ;
    mf:name "1negateddot_fail-noOthers" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negateddot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1negateddot_fail-others_lexicallyEarlier> a sht:ValidationFailure ;
    mf:name "1negateddot_fail-others_lexicallyEarlier" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p0> <o0>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negateddot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1negateddot_fail-others_lexicallyLater> a sht:ValidationFailure ;
    mf:name "1negateddot_fail-others_lexicallyLater" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p1> <o1>; <p2> <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negateddot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1;Ip2_Io2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1negatedinversedot_pass-empty> a sht:ValidationTest ;
    mf:name "1negatedinversedot_pass-empty" ;
    rdfs:comment "<S> { !<p1> . } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negatedinversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    mf:result <1negatedinversedot_pass.val>
    .

<#1negatedinversedot_pass-missing> a sht:ValidationTest ;
    mf:name "1negatedinversedot_pass-missing" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negatedinversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    mf:result <1negatedinversedot_pass.val>
    .

<#1negatedinversedot_fail-noOthers> a sht:ValidationFailure ;
    mf:name "1negatedinversedot_fail-noOthers" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negatedinversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    .

<#1negatedinversedot_fail-others_lexicallyEarlier> a sht:ValidationFailure ;
    mf:name "1negatedinversedot_fail-others_lexicallyEarlier" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p0> <o0>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negatedinversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    .

<#1negatedinversedot_fail-others_lexicallyLater> a sht:ValidationFailure ;
    mf:name "1negatedinversedot_fail-others_lexicallyLater" ;
    rdfs:comment "<S> { !<p1> . } on { <s> <p1> <o1>; <p2> <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1negatedinversedot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1;Ip2_Io2.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    .

<#1Adot_pass> a sht:ValidationTest ;
    mf:name "1Adot_pass" ;
    rdfs:comment "<S> { a . } on { <s> a <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1Adot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_a_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1Adot_pass.val>
    .

# } triple pattern
# annotations {

<#1dotAnnotIRIREF_pass> a sht:ValidationTest ;
    mf:name "1dotAnnotIRIREF_pass" ;
    rdfs:comment "<S> { <p1> .; <annot> <IRIREF> } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotAnnotIRIREF.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dotAnnotIRIREF_pass.val>
    .

<#1dotAnnotIRIREF_missing> a sht:ValidationFailure ;
    mf:name "1dotAnnotIRIREF_missing" ;
    rdfs:comment "<S> { <p1> .; <annot> <IRIREF> } on { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotAnnotIRIREF.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotAnnotSTRING_LITERAL1_pass> a sht:ValidationTest ;
    mf:name "1dotAnnotSTRING_LITERAL1_pass" ;
    rdfs:comment "<S> { <p1> .; <annot> 'STRING_LITERAL1' } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotAnnotSTRING_LITERAL1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dotAnnotSTRING_LITERAL1_pass.val>
    .

<#1dotAnnot3_pass> a sht:ValidationTest ;
    mf:name "1dotAnnot3_pass" ;
    rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotAnnot3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dotAnnot3_pass.val>
    .

<#1dotAnnot3_missing> a sht:ValidationFailure ;
    mf:name "1dotAnnot3_missing" ;
    rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotAnnot3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1inversedotAnnot3_pass> a sht:ValidationTest ;
    mf:name "1inversedotAnnot3_pass" ;
    rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedotAnnot3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    mf:result <1inversedotAnnot3_pass.val>
    .

<#1inversedotAnnot3_missing> a sht:ValidationFailure ;
    mf:name "1inversedotAnnot3_missing" ;
    rdfs:comment "<S> { <p1> .; <a1> '1'; <a1> '2'; <a1> '3'; } on { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedotAnnot3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip2_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ]
    .

# } annotations
# semantic actions {

<#1dotCode1_pass> a sht:ValidationTest ;
    mf:name "1dotCode1_pass" ;
    rdfs:comment "<S> { <p1> . %<Test>{ print(o) %} } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotCode1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dotCode1_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "http://a.example/o1"
      ]
    )
    .

<#1inversedotCode1_pass> a sht:ValidationTest ;
    mf:name "1inversedotCode1_pass" ;
    rdfs:comment "<S> { <p1> . %<Test>{ print(o) %} } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1inversedotCode1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/o1>
    ] ;
    mf:result <1inversedotCode1_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "http://a.example/o1"
      ]
    )
    .

<#1dotCode3_pass> a sht:ValidationTest ;
    mf:name "1dotCode3_pass" ;
    rdfs:comment "<S> { <p1> . %<Test>{ print(s) %} %<Test>{ print(p) %} %<Test>{ print(o) %} } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotCode3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dotCode3_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "http://a.example/s1"
      ]
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "http://a.example/p1"
      ]
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "http://a.example/o1"
      ]
    )
    .

<#1dotCode3fail_abort> a sht:ValidationFailure ;
    mf:name "1dotCode3fail_abort" ;
    rdfs:comment "<S> { <p1> . %<Test>{ print(s) %}%<Test>{ fail(s) %}%<Test>{ print(o) %} } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotCode3fail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotCodeWithEscapes1_pass> a sht:ValidationTest ;
    mf:name "1dotCodeWithEscapes1_pass" ;
    rdfs:comment "<S> { <p1> . %<Test>{ print(o) %} } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotCodeWithEscapes1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dotCodeWithEscapes1_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"%{\\\\%}\""
      ]
    )
    .

<#1dotShapeCode1_pass> a sht:ValidationTest ;
    mf:name "1dotShapeCode1_pass" ;
    rdfs:comment "<S> { <p1> . } %<Test>{ print(o) %} on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotShapeCode1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dotShapeCode1_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"shape action\""
      ]
    )
    .

<#open3groupdotcloseCode1-p1p2p3> a sht:ValidationTest ;
    mf:name "open3groupdotcloseCode1-p1p2p3" ;
    rdfs:comment "@@ open3groupdotcloseCode1-p1p2p3" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/open3groupdotcloseCode1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1p2p3.ttl> ;
      sht:focus <x>
    ] ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"group semAct\""
      ]
    ) ;
    mf:result <open3groupdotcloseCode1-p1p2p3.val>
    .

<#startCode1_pass> a sht:ValidationTest ;
    mf:name "startCode1_pass" ;
    rdfs:comment "%<Test>{print('startAct')%} <S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/startCode1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <startCode1_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"startAct\""
      ]
    )
    .

<#startCode1fail_abort> a sht:ValidationFailure ;
    mf:name "startCode1fail_abort" ;
    rdfs:comment "%<Test>{ fail('startAct') %} <S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/startCode1fail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"startAct\""
      ]
    )
    .

<#startCode1startRef_pass> a sht:ValidationTest ;
    mf:name "startCode1startRef_pass" ;
    rdfs:comment "%<Test>{print('startAct')%} <S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/startCode1startRef.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <startCode1_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"startAct\""
      ]
    )
    .

<#startCode1startReffail_abort> a sht:ValidationFailure ;
    mf:name "startCode1startReffail_abort" ;
    rdfs:comment "%<Test>{ fail('startAct') %} <S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/startCode1startReffail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"startAct\""
      ]
    )
    .

<#startCode3_pass> a sht:ValidationTest ;
    mf:name "startCode3_pass" ;
    rdfs:comment "%<Test>{print('startAct 1')%} %<Test>{print('startAct 2')%} %<Test>{print('startAct 3')%} <S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/startCode3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <startCode3_pass.val> ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"startAct 1\""
      ]
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"startAct 2\""
      ]
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"startAct 3\""
      ]
    )
    .

<#startCode3fail_abort> a sht:ValidationFailure ;
    mf:name "startCode3fail_abort" ;
    rdfs:comment "%<Test>{print('startAct 1')%} %<Test>{ fail('startAct 2') %} %<Test>{print('startAct 3')%} <S> { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/startCode3fail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

# } semantic actions
# annotations + semantic actions {
<#open3groupdotclosecard23Annot3Code2-p1p2p3X3> a sht:ValidationTest ;
    mf:name "open3groupdotclosecard23Annot3Code2-p1p2p3X3" ;
    rdfs:comment "@@ open3groupdotclosecard23Annot3Code2-p1p2p3X3" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/open3groupdotclosecard23Annot3Code2.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1p2p3X3.ttl> ;
      sht:focus <x>
    ] ;
    mf:extensionResults (
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"group semAct 1\""
      ]
      [
        mf:extension <http://shex.io/extensions/Test/> ;
        mf:prints "\"group semAct 2\""
      ]
    ) ;
    mf:result <open3groupdotclosecard23Annot3Code2-p1p2p3X3.val>
    .

# } annotations + semantic actions
# cardinality {

<#1card2_fail0> a sht:ValidationFailure ;
    mf:name "1card2_fail0" ;
    rdfs:comment "<S> { <p1> .{2} } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card2_fail1> a sht:ValidationFailure ;
    mf:name "1card2_fail1" ;
    rdfs:comment "<S> { <p1> .{2} } on { <s> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card2_pass2> a sht:ValidationTest ;
    mf:name "1card2_pass2" ;
    rdfs:comment "<S> { <p1> .{2} } on { <s> <p1> 'a','b' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card2_pass2.val>
    .

<#1card2_fail3> a sht:ValidationFailure ;
    mf:name "1card2_fail3" ;
    rdfs:comment "<S> { <p1> .{2} } on { <s> <p1> 'a','b','c' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card25_fail0> a sht:ValidationFailure ;
    mf:name "1card25_fail0" ;
    rdfs:comment "<S> { <p1> .{2,5} } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card25.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card25_fail1> a sht:ValidationFailure ;
    mf:name "1card25_fail1" ;
    rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card25.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card25_pass2> a sht:ValidationTest ;
    mf:name "1card25_pass2" ;
    rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card25.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card25_pass2.val>
    .

<#1card25_pass3> a sht:ValidationTest ;
    mf:name "1card25_pass3" ;
    rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card25.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card25_pass3.val>
    .

<#1card25_pass4> a sht:ValidationTest ;
    mf:name "1card25_pass4" ;
    rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c','d' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card25.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc,Ld.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card25_pass4.val>
    .

<#1card25_pass5> a sht:ValidationTest ;
    mf:name "1card25_pass5" ;
    rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c','d','e' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card25.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc,Ld,Le.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card25_pass5.val>
    .

<#1card25_fail6> a sht:ValidationFailure ;
    mf:name "1card25_fail6" ;
    rdfs:comment "<S> { <p1> .{2,5} } on { <s> <p1> 'a','b','c','d','e','f' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card25.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card2Star_fail0> a sht:ValidationFailure ;
    mf:name "1card2Star_fail0" ;
    rdfs:comment "<S> { <p1> .{2,*} } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2Star.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card2Star_fail1> a sht:ValidationFailure ;
    mf:name "1card2Star_fail1" ;
    rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2Star.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1card2Star_pass2> a sht:ValidationTest ;
    mf:name "1card2Star_pass2" ;
    rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a','b' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2Star.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card2Star_pass2.val>
    .

<#1card2Star_pass3> a sht:ValidationTest ;
    mf:name "1card2Star_pass3" ;
    rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a','b','c' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2Star.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card2Star_pass3.val>
    .

<#1card2Star_pass6> a sht:ValidationTest ;
    mf:name "1card2Star_pass6" ;
    rdfs:comment "<S> { <p1> .{2,*} } on { <s> <p1> 'a','b','c','d','e','f' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1card2Star.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1card2Star_pass6.val>
    .

<#1cardOpt_pass0> a sht:ValidationTest ;
    mf:name "1cardOpt_pass0" ;
    rdfs:comment "<S> { <p1> .+ } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardOpt.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardOpt_pass0.val>
    .

<#1cardOpt_pass1> a sht:ValidationTest ;
    mf:name "1cardOpt_pass1" ;
    rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardOpt.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardOpt_pass1.val>
    .

<#1cardOpt_fail2> a sht:ValidationFailure ;
    mf:name "1cardOpt_fail2" ;
    rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a','b' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardOpt.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1cardOpt_pass6> a sht:ValidationFailure ;
    mf:name "1cardOpt_pass6" ;
    rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a','b','c','d','e','f' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardOpt.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1cardPlus_fail0> a sht:ValidationFailure ;
    mf:name "1cardPlus_fail0" ;
    rdfs:comment "<S> { <p1> .+ } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardPlus.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1cardPlus_pass1> a sht:ValidationTest ;
    mf:name "1cardPlus_pass1" ;
    rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardPlus.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardPlus_pass1.val>
    .

<#1cardPlus_pass2> a sht:ValidationTest ;
    mf:name "1cardPlus_pass2" ;
    rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a','b' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardPlus.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardPlus_pass2.val>
    .

<#1cardPlus_pass6> a sht:ValidationTest ;
    mf:name "1cardPlus_pass6" ;
    rdfs:comment "<S> { <p1> .+ } on { <s> <p1> 'a','b','c','d','e','f' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardPlus.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardPlus_pass6.val>
    .

<#1cardStar_pass0> a sht:ValidationTest ;
    mf:name "1cardStar_pass0" ;
    rdfs:comment "<S> { <p1> .* } on {  }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardStar.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <empty.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardStar_pass0.val>
    .

<#1cardStar_pass1> a sht:ValidationTest ;
    mf:name "1cardStar_pass1" ;
    rdfs:comment "<S> { <p1> .* } on { <s> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardStar.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardStar_pass1.val>
    .

<#1cardStar_pass2> a sht:ValidationTest ;
    mf:name "1cardStar_pass2" ;
    rdfs:comment "<S> { <p1> .* } on { <s> <p1> 'a','b' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardStar.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardStar_pass2.val>
    .

<#1cardStar_pass6> a sht:ValidationTest ;
    mf:name "1cardStar_pass6" ;
    rdfs:comment "<S> { <p1> .* } on { <s> <p1> 'a','b','c','d','e','f' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1cardStar.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Lb,Lc,Ld,Le,Lf.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1cardStar_pass6.val>
    .

# } cardinality
# datatype {

<#1datatype_missing> a sht:ValidationFailure ;
    mf:name "1datatype_missing" ;
    rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1datatype_nonLiteral> a sht:ValidationFailure ;
    mf:name "1datatype_nonLiteral" ;
    rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1datatype_wrongDatatype> a sht:ValidationFailure ;
    mf:name "1datatype_wrongDatatype" ;
    rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s> <p1> 1.234 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC1.345.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1datatype_pass> a sht:ValidationTest ;
    mf:name "1datatype_pass" ;
    rdfs:comment "<S> { <p1> <dt1> } on <s> in { <s> <p1> 'ab'^^<dt1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_dt1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1datatype_pass.val>
    .

# } datatype
# facets {
#   manual {

<#1datatypeLength_fail-missing> a sht:ValidationFailure ;
    mf:name "1datatypeLength_fail-missing" ;
    rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p2> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatypeLength.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1datatypeLength_fail-wrongDatatype> a sht:ValidationFailure ;
    mf:name "1datatypeLength_fail-wrongDatatype" ;
    rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 1.234 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatypeLength.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC1.345.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1datatypeLength_fail-short> a sht:ValidationFailure ;
    mf:name "1datatypeLength_fail-short" ;
    rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 1234 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatypeLength.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT1234.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1datatypeLength_pass> a sht:ValidationTest ;
    mf:name "1datatypeLength_pass" ;
    rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 12345 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatypeLength.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT12345.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1datatypeLength_pass.val>
    .

<#1datatypeLength_fail-long> a sht:ValidationFailure ;
    mf:name "1datatypeLength_fail-long" ;
    rdfs:comment "<S> { <p1> xs:integer LENGTH 5 } on <s> in { <s> <p1> 123456 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1datatypeLength.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT123456.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1literalFractiondigits_fail-short> a sht:ValidationFailure ;
    mf:name "1literalFractiondigits_fail-short" ;
    rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 1.2345 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1literalFractiondigits.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC1_2345.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1literalFractiondigits_pass> a sht:ValidationTest ;
    mf:name "1literalFractiondigits_pass" ;
    rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 1.23456 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1literalFractiondigits.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC1_23456.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1literalFractiondigits_pass.val>
    .

<#1literalFractiondigits_fail-long> a sht:ValidationFailure ;
    mf:name "1literalFractiondigits_fail-long" ;
    rdfs:comment "<S1> { <p1> LITERAL FRACTIONDIGITS 5 } / { <s1> <p1> 1.234567 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1literalFractiondigits.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC1_234567.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusiveINTEGER_fail-low> a sht:ValidationFailure ;
    mf:name "1floatMininclusiveINTEGER_fail-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '4.9'^^xsd:float }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_9.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusiveINTEGER_pass-equalLead> a sht:ValidationTest ;
    mf:name "1floatMininclusiveINTEGER_pass-equalLead" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '05'^^xsd:float }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT05.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveINTEGER_pass-equalLead.val>
    .

<#1floatMininclusiveINTEGER_pass-equalTrail> a sht:ValidationTest ;
    mf:name "1floatMininclusiveINTEGER_pass-equalTrail" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '5.0'^^xsd:float }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveINTEGER_pass-equalTrail.val>
    .

<#1floatMininclusiveINTEGER_pass-high> a sht:ValidationTest ;
    mf:name "1floatMininclusiveINTEGER_pass-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '5.1'^^xsd:float }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveINTEGER_pass-high.val>
    .

<#1floatMininclusiveINTEGERLead_pass-equal> a sht:ValidationTest ;
    mf:name "1floatMininclusiveINTEGERLead_pass-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:float }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveINTEGER_pass-equal.val>
    .

<#1integerMininclusiveINTEGER_fail-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '4'^^xsd:integer }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGER_pass-equalLead> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGER_pass-equalLead" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '05'^^xsd:integer }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT05.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGER_pass-equalLead.val>
    .

<#1integerMininclusiveINTEGER_pass-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGER_pass-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '5'^^xsd:integer }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGER_pass-equal.val>
    .

<#1integerMininclusiveINTEGER_pass-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGER_pass-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '6'^^xsd:integer }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGER_pass-high.val>
    .

#   } manual
#   generated {

<#1integerMininclusiveINTEGER_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGER_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGER_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGER_pass-integer-equal.val>
    .

<#1integerMininclusiveINTEGER_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGER_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGER_pass-integer-high.val>
    .

<#1integerMininclusiveINTEGERLead_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGERLead_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGERLead_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGERLead_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGERLead_pass-integer-equal.val>
    .

<#1integerMininclusiveINTEGERLead_pass-integer-equalLead> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGERLead_pass-integer-equalLead" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 05 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT05.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGERLead_pass-integer-equalLead.val>
    .

<#1integerMininclusiveINTEGERLead_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveINTEGERLead_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveINTEGERLead_pass-integer-high.val>
    .

<#1integerMininclusiveDECIMAL_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMAL_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 4.5 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMAL_pass-integer-equal.val>
    .

<#1integerMininclusiveDECIMALLeadTrail_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveDECIMALLeadTrail_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveDECIMALLeadTrail_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALLeadTrail_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALLeadTrail_pass-integer-equal.val>
    .

<#1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 05 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT05.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALLeadTrail_pass-integer-equalLead.val>
    .

<#1integerMininclusiveDECIMALLeadTrail_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALLeadTrail_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALLeadTrail_pass-integer-high.val>
    .

<#1integerMininclusiveDECIMALint_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveDECIMALint_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveDECIMALint_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALint_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALint_pass-integer-equal.val>
    .

<#1integerMininclusiveDECIMALint_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALint_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALint_pass-integer-high.val>
    .

<#1integerMininclusiveDECIMALintLeadTrail_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveDECIMALintLeadTrail_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALintLeadTrail_pass-integer-equal.val>
    .

<#1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 05 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT05.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALintLeadTrail_pass-integer-equalLead.val>
    .

<#1integerMininclusiveDECIMALintLeadTrail_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDECIMALintLeadTrail_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDECIMALintLeadTrail_pass-integer-high.val>
    .

<#1integerMininclusiveDOUBLE_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLE_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 4.5e0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLE_pass-integer-equal.val>
    .

<#1integerMininclusiveDOUBLELeadTrail_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveDOUBLELeadTrail_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveDOUBLELeadTrail_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLELeadTrail_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLELeadTrail_pass-integer-equal.val>
    .

<#1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 05 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT05.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLELeadTrail_pass-integer-equalLead.val>
    .

<#1integerMininclusiveDOUBLELeadTrail_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLELeadTrail_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 04.50e0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLELeadTrail_pass-integer-high.val>
    .

<#1integerMininclusiveDOUBLEint_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLEint_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5.0e0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLEint_pass-integer-equal.val>
    .

<#1integerMininclusiveDOUBLEintLeadTrail_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveDOUBLEintLeadTrail_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equal.val>
    .

<#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 05 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT05.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLEintLeadTrail_pass-integer-equalLead.val>
    .

<#1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 05.00e0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusiveDOUBLEintLeadTrail_pass-integer-high.val>
    .

<#1integerMininclusiveINTEGER_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGER_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGER_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGER_fail-dateTime-equal> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-dateTime-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '2015-12-25T01:23:45Z'^^<http://www.w3.org/2001/XMLSchema#dateTime> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DT2015-12-25T01_23_45Z.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGER_fail-string-equal> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-string-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> 'ab'^^<http://www.w3.org/2001/XMLSchema#string> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_STRab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusiveINTEGER_fail-byte-equal> a sht:ValidationFailure ;
    mf:name "1integerMininclusiveINTEGER_fail-byte-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE 5 } / { <s1> <p1> '5'^^<http://www.w3.org/2001/XMLSchema#byte> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_BYT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusivexsd-integer_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMininclusivexsd-integer_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE \"5\"^^<http://www.w3.org/2001/XMLSchema#integer> } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusivexsd-integer.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMininclusivexsd-integer_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMininclusivexsd-integer_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MININCLUSIVE \"5\"^^<http://www.w3.org/2001/XMLSchema#integer> } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMininclusivexsd-integer.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMininclusivexsd-integer_pass-integer-equal.val>
    .

<#1decimalMininclusiveINTEGER_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveINTEGER_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveINTEGER_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveINTEGER_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveINTEGER_pass-decimal-high.val>
    .

<#1decimalMininclusiveINTEGERLead_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveINTEGERLead_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveINTEGERLead_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveINTEGERLead_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveINTEGERLead_pass-decimal-high.val>
    .

<#1decimalMininclusiveDECIMAL_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDECIMAL_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveDECIMAL_pass-decimal-equal> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDECIMAL_pass-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDECIMAL_pass-decimal-equal.val>
    .

<#1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 04.50 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDECIMAL_pass-decimal-equalLeadTrail.val>
    .

<#1decimalMininclusiveDECIMAL_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDECIMAL_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDECIMAL_pass-decimal-high.val>
    .

<#1decimalMininclusiveDECIMALLeadTrail_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDECIMALLeadTrail_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equal.val>
    .

<#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 04.50 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDECIMALLeadTrail_pass-decimal-equalLeadTrail.val>
    .

<#1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDECIMALLeadTrail_pass-decimal-high.val>
    .

<#1decimalMininclusiveDECIMALintLeadTrail_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDECIMALintLeadTrail_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDECIMALintLeadTrail_pass-decimal-high.val>
    .

<#1decimalMininclusiveDOUBLE_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDOUBLE_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5e0 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveDOUBLE_pass-decimal-equal> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDOUBLE_pass-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5e0 } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDOUBLE_pass-decimal-equal.val>
    .

<#1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5e0 } / { <s1> <p1> 04.50 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDOUBLE_pass-decimal-equalLeadTrail.val>
    .

<#1decimalMininclusiveDOUBLELeadTrail_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDOUBLELeadTrail_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equal.val>
    .

<#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 04.50 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDOUBLELeadTrail_pass-decimal-equalLeadTrail.val>
    .

<#1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 04.50e0 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDOUBLELeadTrail_pass-decimal-high.val>
    .

<#1decimalMininclusiveDOUBLEintLeadTrail_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDOUBLEintLeadTrail_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00e0 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 05.00e0 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusiveDOUBLEintLeadTrail_pass-decimal-high.val>
    .

<#1decimalMininclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDECIMAL_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1decimalMininclusiveDECIMAL_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusivexsd-decimal_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMininclusivexsd-decimal_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#decimal> } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusivexsd-decimal.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMininclusivexsd-decimal_pass-decimal-equal> a sht:ValidationTest ;
    mf:name "1decimalMininclusivexsd-decimal_pass-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#decimal> } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMininclusivexsd-decimal.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMininclusivexsd-decimal_pass-decimal-equal.val>
    .

<#1floatMininclusiveINTEGERLead_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMininclusiveINTEGERLead_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusiveINTEGERLead_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMininclusiveINTEGERLead_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveINTEGERLead_pass-float-high.val>
    .

<#1floatMininclusiveDECIMAL_pass-float-equal> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDECIMAL_pass-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDECIMAL_pass-float-equal.val>
    .

<#1floatMininclusiveDECIMAL_pass-float-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDECIMAL_pass-float-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDECIMAL_pass-float-equalLeadTrail.val>
    .

<#1floatMininclusiveDECIMALLeadTrail_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMininclusiveDECIMALLeadTrail_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusiveDECIMALLeadTrail_pass-float-equal> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDECIMALLeadTrail_pass-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDECIMALLeadTrail_pass-float-equal.val>
    .

<#1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDECIMALLeadTrail_pass-float-equalLeadTrail.val>
    .

<#1floatMininclusiveDECIMALLeadTrail_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDECIMALLeadTrail_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDECIMALLeadTrail_pass-float-high.val>
    .

<#1floatMininclusiveDECIMALintLeadTrail_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMininclusiveDECIMALintLeadTrail_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusiveDECIMALintLeadTrail_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDECIMALintLeadTrail_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDECIMALintLeadTrail_pass-float-high.val>
    .

<#1floatMininclusiveDOUBLE_pass-float-equal> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDOUBLE_pass-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5e0 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDOUBLE_pass-float-equal.val>
    .

<#1floatMininclusiveDOUBLE_pass-float-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDOUBLE_pass-float-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 4.5e0 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDOUBLE_pass-float-equalLeadTrail.val>
    .

<#1floatMininclusiveDOUBLELeadTrail_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMininclusiveDOUBLELeadTrail_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusiveDOUBLELeadTrail_pass-float-equal> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDOUBLELeadTrail_pass-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDOUBLELeadTrail_pass-float-equal.val>
    .

<#1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '04.50'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT04_50.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDOUBLELeadTrail_pass-float-equalLeadTrail.val>
    .

<#1floatMininclusiveDOUBLELeadTrail_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDOUBLELeadTrail_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 04.50e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDOUBLELeadTrail_pass-float-high.val>
    .

<#1floatMininclusiveDOUBLEintLeadTrail_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMininclusiveDOUBLEintLeadTrail_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusiveDOUBLEintLeadTrail_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMininclusiveDOUBLEintLeadTrail_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE 05.00e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusiveDOUBLEintLeadTrail_pass-float-high.val>
    .

<#1floatMininclusivexsd-float_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMininclusivexsd-float_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusivexsd-float.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMininclusivexsd-float_pass-float-equal> a sht:ValidationTest ;
    mf:name "1floatMininclusivexsd-float_pass-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MININCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMininclusivexsd-float.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMininclusivexsd-float_pass-float-equal.val>
    .

<#1doubleMininclusiveINTEGERLead_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMininclusiveINTEGERLead_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMininclusiveINTEGERLead_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveINTEGERLead_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveINTEGERLead_pass-double-high.val>
    .

<#1doubleMininclusiveDECIMAL_pass-double-equal> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDECIMAL_pass-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDECIMAL_pass-double-equal.val>
    .

<#1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5 } / { <s1> <p1> 04.50e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL04_50e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDECIMAL_pass-double-equalLeadTrail.val>
    .

<#1doubleMininclusiveDECIMALLeadTrail_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMininclusiveDECIMALLeadTrail_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMininclusiveDECIMALLeadTrail_pass-double-equal> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDECIMALLeadTrail_pass-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDECIMALLeadTrail_pass-double-equal.val>
    .

<#1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 04.50e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL04_50e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDECIMALLeadTrail_pass-double-equalLeadTrail.val>
    .

<#1doubleMininclusiveDECIMALLeadTrail_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDECIMALLeadTrail_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDECIMALLeadTrail_pass-double-high.val>
    .

<#1doubleMininclusiveDECIMALintLeadTrail_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMininclusiveDECIMALintLeadTrail_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMininclusiveDECIMALintLeadTrail_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDECIMALintLeadTrail_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDECIMALintLeadTrail_pass-double-high.val>
    .

<#1doubleMininclusiveDOUBLE_pass-double-equal> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDOUBLE_pass-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5e0 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDOUBLE_pass-double-equal.val>
    .

<#1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 4.5e0 } / { <s1> <p1> 04.50e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL04_50e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDOUBLE_pass-double-equalLeadTrail.val>
    .

<#1doubleMininclusiveDOUBLELeadTrail_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMininclusiveDOUBLELeadTrail_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMininclusiveDOUBLELeadTrail_pass-double-equal> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDOUBLELeadTrail_pass-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDOUBLELeadTrail_pass-double-equal.val>
    .

<#1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 04.50e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL04_50e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDOUBLELeadTrail_pass-double-equalLeadTrail.val>
    .

<#1doubleMininclusiveDOUBLELeadTrail_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDOUBLELeadTrail_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 04.50e0 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDOUBLELeadTrail_pass-double-high.val>
    .

<#1doubleMininclusiveDOUBLEintLeadTrail_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMininclusiveDOUBLEintLeadTrail_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00e0 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE 05.00e0 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusiveDOUBLEintLeadTrail_pass-double-high.val>
    .

<#1doubleMininclusivexsd-double_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMininclusivexsd-double_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE \"4.5e0\"^^<http://www.w3.org/2001/XMLSchema#double> } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusivexsd-double.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMininclusivexsd-double_pass-double-equal> a sht:ValidationTest ;
    mf:name "1doubleMininclusivexsd-double_pass-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MININCLUSIVE \"4.5e0\"^^<http://www.w3.org/2001/XMLSchema#double> } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMininclusivexsd-double.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMininclusivexsd-double_pass-double-equal.val>
    .

<#1integerMinexclusiveINTEGER_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMinexclusiveINTEGER_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMinexclusiveINTEGER_fail-integer-equal> a sht:ValidationFailure ;
    mf:name "1integerMinexclusiveINTEGER_fail-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMinexclusiveINTEGER_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMinexclusiveINTEGER_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMinexclusiveINTEGER_pass-integer-high.val>
    .

<#1integerMinexclusiveDECIMALint_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMinexclusiveDECIMALint_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMinexclusiveDECIMALint_fail-integer-equal> a sht:ValidationFailure ;
    mf:name "1integerMinexclusiveDECIMALint_fail-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMinexclusiveDECIMALint_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMinexclusiveDECIMALint_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMinexclusiveDECIMALint_pass-integer-high.val>
    .

<#1integerMinexclusiveDOUBLEint_fail-integer-low> a sht:ValidationFailure ;
    mf:name "1integerMinexclusiveDOUBLEint_fail-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0e0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMinexclusiveDOUBLEint_fail-integer-equal> a sht:ValidationFailure ;
    mf:name "1integerMinexclusiveDOUBLEint_fail-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0e0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMinexclusiveDOUBLEint_pass-integer-high> a sht:ValidationTest ;
    mf:name "1integerMinexclusiveDOUBLEint_pass-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MINEXCLUSIVE 5.0e0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMinexclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMinexclusiveDOUBLEint_pass-integer-high.val>
    .

<#1decimalMinexclusiveINTEGER_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMinexclusiveINTEGER_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMinexclusiveINTEGER_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMinexclusiveINTEGER_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMinexclusiveINTEGER_pass-decimal-high.val>
    .

<#1decimalMinexclusiveDECIMAL_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMinexclusiveDECIMAL_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMinexclusiveDECIMAL_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1decimalMinexclusiveDECIMAL_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMinexclusiveDECIMAL_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMinexclusiveDECIMAL_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMinexclusiveDECIMAL_pass-decimal-high.val>
    .

<#1decimalMinexclusiveDOUBLE_fail-decimal-low> a sht:ValidationFailure ;
    mf:name "1decimalMinexclusiveDOUBLE_fail-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMinexclusiveDOUBLE_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1decimalMinexclusiveDOUBLE_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMinexclusiveDOUBLE_pass-decimal-high> a sht:ValidationTest ;
    mf:name "1decimalMinexclusiveDOUBLE_pass-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMinexclusiveDOUBLE_pass-decimal-high.val>
    .

<#1decimalMinexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1decimalMinexclusiveDECIMAL_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMinexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1decimalMinexclusiveDECIMAL_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMinexclusiveINTEGER_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMinexclusiveINTEGER_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMinexclusiveINTEGER_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMinexclusiveINTEGER_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMinexclusiveINTEGER_pass-float-high.val>
    .

<#1floatMinexclusiveDECIMAL_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMinexclusiveDECIMAL_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMinexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1floatMinexclusiveDECIMAL_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMinexclusiveDECIMAL_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMinexclusiveDECIMAL_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMinexclusiveDECIMAL_pass-float-high.val>
    .

<#1floatMinexclusiveDOUBLE_fail-float-low> a sht:ValidationFailure ;
    mf:name "1floatMinexclusiveDOUBLE_fail-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMinexclusiveDOUBLE_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1floatMinexclusiveDOUBLE_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5e0 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMinexclusiveDOUBLE_pass-float-high> a sht:ValidationTest ;
    mf:name "1floatMinexclusiveDOUBLE_pass-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE 4.5e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMinexclusiveDOUBLE_pass-float-high.val>
    .

<#1floatMinexclusivexsd-float_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1floatMinexclusivexsd-float_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 4.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusivexsd-float.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMinexclusivexsd-float_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1floatMinexclusivexsd-float_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MINEXCLUSIVE \"4.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMinexclusivexsd-float.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMinexclusiveINTEGER_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMinexclusiveINTEGER_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 5 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMinexclusiveINTEGER_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMinexclusiveINTEGER_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 5 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMinexclusiveINTEGER_pass-double-high.val>
    .

<#1doubleMinexclusiveDECIMAL_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMinexclusiveDECIMAL_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMinexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMinexclusiveDECIMAL_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMinexclusiveDECIMAL_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMinexclusiveDECIMAL_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMinexclusiveDECIMAL_pass-double-high.val>
    .

<#1doubleMinexclusiveDOUBLE_fail-double-low> a sht:ValidationFailure ;
    mf:name "1doubleMinexclusiveDOUBLE_fail-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMinexclusiveDOUBLE_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMinexclusiveDOUBLE_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 4.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMinexclusiveDOUBLE_pass-double-high> a sht:ValidationTest ;
    mf:name "1doubleMinexclusiveDOUBLE_pass-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5e0 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMinexclusiveDOUBLE_pass-double-high.val>
    .

<#1doubleMinexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1doubleMinexclusiveDECIMAL_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MINEXCLUSIVE 4.5 } / { <s1> <p1> '4.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMinexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxinclusiveINTEGER_pass-integer-low> a sht:ValidationTest ;
    mf:name "1integerMaxinclusiveINTEGER_pass-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxinclusiveINTEGER_pass-integer-low.val>
    .

<#1integerMaxinclusiveINTEGER_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMaxinclusiveINTEGER_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxinclusiveINTEGER_pass-integer-equal.val>
    .

<#1integerMaxinclusiveINTEGER_fail-integer-high> a sht:ValidationFailure ;
    mf:name "1integerMaxinclusiveINTEGER_fail-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxinclusiveDECIMALint_pass-integer-low> a sht:ValidationTest ;
    mf:name "1integerMaxinclusiveDECIMALint_pass-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxinclusiveDECIMALint_pass-integer-low.val>
    .

<#1integerMaxinclusiveDECIMALint_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMaxinclusiveDECIMALint_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxinclusiveDECIMALint_pass-integer-equal.val>
    .

<#1integerMaxinclusiveDECIMALint_fail-integer-high> a sht:ValidationFailure ;
    mf:name "1integerMaxinclusiveDECIMALint_fail-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxinclusiveDOUBLEint_pass-integer-low> a sht:ValidationTest ;
    mf:name "1integerMaxinclusiveDOUBLEint_pass-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0e0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxinclusiveDOUBLEint_pass-integer-low.val>
    .

<#1integerMaxinclusiveDOUBLEint_pass-integer-equal> a sht:ValidationTest ;
    mf:name "1integerMaxinclusiveDOUBLEint_pass-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0e0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxinclusiveDOUBLEint_pass-integer-equal.val>
    .

<#1integerMaxinclusiveDOUBLEint_fail-integer-high> a sht:ValidationFailure ;
    mf:name "1integerMaxinclusiveDOUBLEint_fail-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXINCLUSIVE 5.0e0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxinclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxinclusiveINTEGER_pass-decimal-low> a sht:ValidationTest ;
    mf:name "1decimalMaxinclusiveINTEGER_pass-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxinclusiveINTEGER_pass-decimal-low.val>
    .

<#1decimalMaxinclusiveINTEGER_fail-decimal-high> a sht:ValidationFailure ;
    mf:name "1decimalMaxinclusiveINTEGER_fail-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxinclusiveDECIMAL_pass-decimal-low> a sht:ValidationTest ;
    mf:name "1decimalMaxinclusiveDECIMAL_pass-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxinclusiveDECIMAL_pass-decimal-low.val>
    .

<#1decimalMaxinclusiveDECIMAL_pass-decimal-equal> a sht:ValidationTest ;
    mf:name "1decimalMaxinclusiveDECIMAL_pass-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxinclusiveDECIMAL_pass-decimal-equal.val>
    .

<#1decimalMaxinclusiveDECIMAL_fail-decimal-high> a sht:ValidationFailure ;
    mf:name "1decimalMaxinclusiveDECIMAL_fail-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxinclusiveDOUBLE_pass-decimal-low> a sht:ValidationTest ;
    mf:name "1decimalMaxinclusiveDOUBLE_pass-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxinclusiveDOUBLE_pass-decimal-low.val>
    .

<#1decimalMaxinclusiveDOUBLE_pass-decimal-equal> a sht:ValidationTest ;
    mf:name "1decimalMaxinclusiveDOUBLE_pass-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxinclusiveDOUBLE_pass-decimal-equal.val>
    .

<#1decimalMaxinclusiveDOUBLE_fail-decimal-high> a sht:ValidationFailure ;
    mf:name "1decimalMaxinclusiveDOUBLE_fail-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxinclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxinclusiveDECIMAL_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxinclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxinclusiveDECIMAL_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxinclusiveINTEGER_pass-float-low> a sht:ValidationTest ;
    mf:name "1floatMaxinclusiveINTEGER_pass-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxinclusiveINTEGER_pass-float-low.val>
    .

<#1floatMaxinclusiveINTEGER_fail-float-high> a sht:ValidationFailure ;
    mf:name "1floatMaxinclusiveINTEGER_fail-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxinclusiveDECIMAL_pass-float-low> a sht:ValidationTest ;
    mf:name "1floatMaxinclusiveDECIMAL_pass-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxinclusiveDECIMAL_pass-float-low.val>
    .

<#1floatMaxinclusiveDECIMAL_pass-float-equal> a sht:ValidationTest ;
    mf:name "1floatMaxinclusiveDECIMAL_pass-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxinclusiveDECIMAL_pass-float-equal.val>
    .

<#1floatMaxinclusiveDECIMAL_fail-float-high> a sht:ValidationFailure ;
    mf:name "1floatMaxinclusiveDECIMAL_fail-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxinclusiveDOUBLE_pass-float-low> a sht:ValidationTest ;
    mf:name "1floatMaxinclusiveDOUBLE_pass-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxinclusiveDOUBLE_pass-float-low.val>
    .

<#1floatMaxinclusiveDOUBLE_pass-float-equal> a sht:ValidationTest ;
    mf:name "1floatMaxinclusiveDOUBLE_pass-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5e0 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxinclusiveDOUBLE_pass-float-equal.val>
    .

<#1floatMaxinclusiveDOUBLE_fail-float-high> a sht:ValidationFailure ;
    mf:name "1floatMaxinclusiveDOUBLE_fail-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE 5.5e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxinclusivexsd-float_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1floatMaxinclusivexsd-float_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE \"5.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 5.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusivexsd-float.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxinclusivexsd-float_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1floatMaxinclusivexsd-float_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXINCLUSIVE \"5.5\"^^<http://www.w3.org/2001/XMLSchema#float> } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxinclusivexsd-float.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxinclusiveINTEGER_pass-double-low> a sht:ValidationTest ;
    mf:name "1doubleMaxinclusiveINTEGER_pass-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxinclusiveINTEGER_pass-double-low.val>
    .

<#1doubleMaxinclusiveINTEGER_fail-double-high> a sht:ValidationFailure ;
    mf:name "1doubleMaxinclusiveINTEGER_fail-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxinclusiveDECIMAL_pass-double-low> a sht:ValidationTest ;
    mf:name "1doubleMaxinclusiveDECIMAL_pass-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxinclusiveDECIMAL_pass-double-low.val>
    .

<#1doubleMaxinclusiveDECIMAL_pass-double-equal> a sht:ValidationTest ;
    mf:name "1doubleMaxinclusiveDECIMAL_pass-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxinclusiveDECIMAL_pass-double-equal.val>
    .

<#1doubleMaxinclusiveDECIMAL_fail-double-high> a sht:ValidationFailure ;
    mf:name "1doubleMaxinclusiveDECIMAL_fail-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxinclusiveDOUBLE_pass-double-low> a sht:ValidationTest ;
    mf:name "1doubleMaxinclusiveDOUBLE_pass-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxinclusiveDOUBLE_pass-double-low.val>
    .

<#1doubleMaxinclusiveDOUBLE_pass-double-equal> a sht:ValidationTest ;
    mf:name "1doubleMaxinclusiveDOUBLE_pass-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxinclusiveDOUBLE_pass-double-equal.val>
    .

<#1doubleMaxinclusiveDOUBLE_fail-double-high> a sht:ValidationFailure ;
    mf:name "1doubleMaxinclusiveDOUBLE_fail-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5e0 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxinclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxinclusiveDECIMAL_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXINCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxinclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxexclusiveINTEGER_pass-integer-low> a sht:ValidationTest ;
    mf:name "1integerMaxexclusiveINTEGER_pass-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxexclusiveINTEGER_pass-integer-low.val>
    .

<#1integerMaxexclusiveINTEGER_fail-integer-equal> a sht:ValidationFailure ;
    mf:name "1integerMaxexclusiveINTEGER_fail-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxexclusiveINTEGER_fail-integer-high> a sht:ValidationFailure ;
    mf:name "1integerMaxexclusiveINTEGER_fail-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxexclusiveDECIMALint_pass-integer-low> a sht:ValidationTest ;
    mf:name "1integerMaxexclusiveDECIMALint_pass-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxexclusiveDECIMALint_pass-integer-low.val>
    .

<#1integerMaxexclusiveDECIMALint_fail-integer-equal> a sht:ValidationFailure ;
    mf:name "1integerMaxexclusiveDECIMALint_fail-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxexclusiveDECIMALint_fail-integer-high> a sht:ValidationFailure ;
    mf:name "1integerMaxexclusiveDECIMALint_fail-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxexclusiveDOUBLEint_pass-integer-low> a sht:ValidationTest ;
    mf:name "1integerMaxexclusiveDOUBLEint_pass-integer-low" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1integerMaxexclusiveDOUBLEint_pass-integer-low.val>
    .

<#1integerMaxexclusiveDOUBLEint_fail-integer-equal> a sht:ValidationFailure ;
    mf:name "1integerMaxexclusiveDOUBLEint_fail-integer-equal" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1integerMaxexclusiveDOUBLEint_fail-integer-high> a sht:ValidationFailure ;
    mf:name "1integerMaxexclusiveDOUBLEint_fail-integer-high" ;
    rdfs:comment "<S1> { <p1> xsd:integer MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1integerMaxexclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusiveINTEGER_pass-decimal-low> a sht:ValidationTest ;
    mf:name "1decimalMaxexclusiveINTEGER_pass-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxexclusiveINTEGER_pass-decimal-low.val>
    .

<#1decimalMaxexclusiveINTEGER_fail-decimal-high> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusiveINTEGER_fail-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusiveDECIMAL_pass-decimal-low> a sht:ValidationTest ;
    mf:name "1decimalMaxexclusiveDECIMAL_pass-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxexclusiveDECIMAL_pass-decimal-low.val>
    .

<#1decimalMaxexclusiveDECIMAL_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusiveDECIMAL_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusiveDECIMAL_fail-decimal-high> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusiveDECIMAL_fail-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusiveDOUBLE_pass-decimal-low> a sht:ValidationTest ;
    mf:name "1decimalMaxexclusiveDOUBLE_pass-decimal-low" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 4.4 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1decimalMaxexclusiveDOUBLE_pass-decimal-low.val>
    .

<#1decimalMaxexclusiveDOUBLE_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusiveDOUBLE_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusiveDOUBLE_fail-decimal-high> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusiveDOUBLE_fail-decimal-high" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.6 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusiveDECIMAL_fail-float-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusiveDECIMAL_fail-float-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> '5.5'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusiveDECIMAL_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusivexsd-byte_fail-byte-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusivexsd-byte_fail-byte-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE 5 } / { <s1> <p1> '5'^^<http://www.w3.org/2001/XMLSchema#byte> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusivexsd-byte.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_BYT5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1decimalMaxexclusivexsd-decimal_fail-decimal-equal> a sht:ValidationFailure ;
    mf:name "1decimalMaxexclusivexsd-decimal_fail-decimal-equal" ;
    rdfs:comment "<S1> { <p1> xsd:decimal MAXEXCLUSIVE \"5.5\"^^<http://www.w3.org/2001/XMLSchema#decimal> } / { <s1> <p1> 5.5 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1decimalMaxexclusivexsd-decimal.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DEC5_5.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxexclusiveINTEGER_pass-float-low> a sht:ValidationTest ;
    mf:name "1floatMaxexclusiveINTEGER_pass-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxexclusiveINTEGER_pass-float-low.val>
    .

<#1floatMaxexclusiveINTEGER_fail-float-high> a sht:ValidationFailure ;
    mf:name "1floatMaxexclusiveINTEGER_fail-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxexclusiveDECIMAL_pass-float-low> a sht:ValidationTest ;
    mf:name "1floatMaxexclusiveDECIMAL_pass-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxexclusiveDECIMAL_pass-float-low.val>
    .

<#1floatMaxexclusiveDECIMAL_fail-float-high> a sht:ValidationFailure ;
    mf:name "1floatMaxexclusiveDECIMAL_fail-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1floatMaxexclusiveDOUBLE_pass-float-low> a sht:ValidationTest ;
    mf:name "1floatMaxexclusiveDOUBLE_pass-float-low" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> '4.4'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT4_4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1floatMaxexclusiveDOUBLE_pass-float-low.val>
    .

<#1floatMaxexclusiveDOUBLE_fail-float-high> a sht:ValidationFailure ;
    mf:name "1floatMaxexclusiveDOUBLE_fail-float-high" ;
    rdfs:comment "<S1> { <p1> xsd:float MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> '5.6'^^<http://www.w3.org/2001/XMLSchema#float> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1floatMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_FLT5_6.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveINTEGER_pass-double-low> a sht:ValidationTest ;
    mf:name "1doubleMaxexclusiveINTEGER_pass-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxexclusiveINTEGER_pass-double-low.val>
    .

<#1doubleMaxexclusiveINTEGER_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveINTEGER_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveINTEGER_fail-double-high> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveINTEGER_fail-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveINTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveINTEGERLead_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveINTEGERLead_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveINTEGERLead.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDECIMAL_pass-double-low> a sht:ValidationTest ;
    mf:name "1doubleMaxexclusiveDECIMAL_pass-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxexclusiveDECIMAL_pass-double-low.val>
    .

<#1doubleMaxexclusiveDECIMAL_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDECIMAL_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDECIMAL_fail-double-high> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDECIMAL_fail-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDECIMAL.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDECIMALLeadTrail_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDECIMALLeadTrail_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.50 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDECIMALLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDECIMALint_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDECIMALint_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.0 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDECIMALint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDECIMALintLeadTrail_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDECIMALintLeadTrail_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.00 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDECIMALintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDOUBLE_pass-double-low> a sht:ValidationTest ;
    mf:name "1doubleMaxexclusiveDOUBLE_pass-double-low" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 4.4e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL4_4e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1doubleMaxexclusiveDOUBLE_pass-double-low.val>
    .

<#1doubleMaxexclusiveDOUBLE_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDOUBLE_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDOUBLE_fail-double-high> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDOUBLE_fail-double-high" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.5e0 } / { <s1> <p1> 5.6e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_6e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDOUBLELeadTrail_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDOUBLELeadTrail_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.50e0 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDOUBLELeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDOUBLEint_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDOUBLEint_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 5.0e0 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDOUBLEint.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1doubleMaxexclusiveDOUBLEintLeadTrail_fail-double-equal> a sht:ValidationFailure ;
    mf:name "1doubleMaxexclusiveDOUBLEintLeadTrail_fail-double-equal" ;
    rdfs:comment "<S1> { <p1> xsd:double MAXEXCLUSIVE 05.00e0 } / { <s1> <p1> 5.5e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1doubleMaxexclusiveDOUBLEintLeadTrail.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL5_5e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

#   } generated
# } facets
# closed {
<#1dotClosed_pass> a sht:ValidationTest ;
    mf:name "1dotClosed_pass" ;
    rdfs:comment "<S> CLOSED { <p1> . } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotClosed.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1dot_pass.val>
    .

<#1dotClosed_fail_lower> a sht:ValidationFailure ;
    mf:name "1dotClosed_fail_lower" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotClosed.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip0_Io0;Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1dotClosed_fail_higher> a sht:ValidationFailure ;
    mf:name "1dotClosed_fail_higher" ;
    rdfs:comment "<S> { <p1> . } on { <s> <p1> <o1>; <p2> <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotClosed.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1;Ip2_Io2.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

# } closed
# node kinds {

<#1literalPlus_Is1_Ip1_La,Io1> a sht:ValidationFailure ;
    mf:name "1literalPlus_Is1_Ip1_La,Io1" ;
    rdfs:comment "<S> { <p1> LITERAL+ } on { <s> <p1> 'a', <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1literalPlus.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La,Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

# } node kinds
# extra {

<#1val1IRIREFExtra1_iri> a sht:ValidationTest ;
    mf:name "1val1IRIREFExtra1_iri" ;
    rdfs:comment "<S> EXTRA <p1> { <p1> (<o1>) } on { <s> <p1> <o1>, <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1IRIREFExtra1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1,Io2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1IRIREFExtra1bnode_Is1_Ip1_Io1.val>
    .

<#1val2IRIREFExtra1_iri> a sht:ValidationFailure ;
    mf:name "1val2IRIREFExtra1_iri" ;
    rdfs:comment "<S> EXTRA <p1> { <p1> (<o1> <o2>) } on { <s> <p1> <o1>, <o2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val2IRIREFExtra1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1,Io2.ttl> ;
      sht:focus <http://a.example/s1>
    ]
    .

<#1val2IRIREFExtra1_bnode> a sht:ValidationTest ;
    mf:name "1val2IRIREFExtra1_bnode" ;
    rdfs:comment "<S> EXTRA <p1> { <p1> (<o1> <o2> } on { <s> <p1> <o1>, _:o2 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val2IRIREFExtra1.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1,Bo2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val2IRIREFExtra1_bnode_Is1_Ip1_Io1.val>
    .

# } extra
# shape reference {

<#1dotRef1_referent,referrer> a sht:ValidationTest ;
    mf:name "1dotRef1_referent,referrer" ;
    rdfs:comment "<n2> in { <n1> <p1> X . <n2> <p2> <n1> } as <S1> in <S1> { <p2> @<S2> } <S2> { <p1> X }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotRef1.shex> ;
      sht:shape <http://a.example/EmployeeShape> ;
      sht:data <In1_Ip1_LX.In2_Ip2_In1.ttl> ;
      sht:focus <http://a.example/n2>
    ] ;
    mf:result <In2_Ip2_In1@In1_Ip1_LX.val>
    .

<#1dotRef1_referrer,referent> a sht:ValidationTest ;
    mf:name "1dotRef1_referrer,referent" ;
    rdfs:comment "<n2> in { <n2> <p2> <n1> . <n1> <p1> X } as <S1> in <S1> { <p2> @<S2> } <S2> { <p1> X }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotRef1.shex> ;
      sht:shape <http://a.example/EmployeeShape> ;
      sht:data <In2_Ip2_In1.In1_Ip1_LX.ttl> ;
      sht:focus <http://a.example/n2>
    ] ;
    mf:result <In2_Ip2_In1@In1_Ip1_LX.val>
    .

<#1dotRef1_missingReferent> a sht:ValidationFailure ;
    mf:name "1dotRef1_missingReferent" ;
    rdfs:comment "<n2> in { <n2> <p2> <n1> } as <S1> in <S1> { <p2> @<S2> } <S2> { <p1> X }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotRef1.shex> ;
      sht:shape <http://a.example/EmployeeShape> ;
      sht:data <In2_Ip2_In1.ttl> ;
      sht:focus <http://a.example/n2>
    ]
    .

<#1dotRef1_overReferrer> a sht:ValidationFailure ;
    mf:name "1dotRef1_overReferrer" ;
    rdfs:comment "<n2> in { <n2> <p2> <n1>, <n3> . <n1> <p1> X } as <S1> in <S1> { <p2> @<S2> } <S2> { <p1> X }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotRef1.shex> ;
      sht:shape <http://a.example/EmployeeShape> ;
      sht:data <In2_Ip2_In1.In2_Ip2_In3.In1_Ip1_LX.ttl> ;
      sht:focus <http://a.example/n2>
    ]
    .

<#1dotRef1_overReferrer,overReferent> a sht:ValidationFailure ;
    mf:name "1dotRef1_overReferrer,overReferent" ;
    rdfs:comment "<n2> in { <n2> <p2> <n1>, <n3> . <n1> <p1> X . <n3> <p1> X } as <S1> in <S1> { <p2> @<S2> } <S2> { <p1> X }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotRef1.shex> ;
      sht:shape <http://a.example/EmployeeShape> ;
      sht:data <In2_Ip2_In1.In2_Ip2_In3.In1_Ip1_LX.In3_Ip1_LX.ttl> ;
      sht:focus <http://a.example/n2>
    ]
    .

<#1dotRef1_overMatchesReferent> a sht:ValidationTest ;
    mf:name "1dotRef1_overMatchesReferent" ;
    rdfs:comment "<n2> in { <n2> <p2> <n1>, <n3> . <n1> <p1> X . <n3> <p1> X } as <S1> in <S1> { <p2> @<S2> } <S2> { <p1> X }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotRef1.shex> ;
      sht:shape <http://a.example/EmployeeShape> ;
      sht:data <In2_Ip2_In1.In1_Ip1_LX.In3_Ip1_LX.ttl> ;
      sht:focus <http://a.example/n2>
    ] ;
    mf:result <In2_Ip2_In1@In1_Ip1_LX.val>
    .

# } shape reference
# algebraic operations {

<#1dotOr2dot_pass_p1> a sht:ValidationTest ;
    mf:name "1dotOr2dot_pass_p1" ;
    rdfs:comment ":S1 {:p1 .|:p2 .,:p3 .} / { :s1 :p1 \"p1-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotOr2dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <open1dotOropen2dotcloseclose_pass_p1.val>
    .

<#1dotOr2dot_pass_p2p3> a sht:ValidationTest ;
    mf:name "1dotOr2dot_pass_p2p3" ;
    rdfs:comment ":S1 {:p1 .|:p2 .,:p3 .} / { :s1 :p2 \"p2-0\"; :p3 \"p3-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotOr2dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p2p3.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <open1dotOropen2dotcloseclose_pass_p2p3.val>
    .

<#1dotOr2dot_fail_p1p2p3> a sht:ValidationFailure ;
    mf:name "1dotOr2dot_fail_p1p2p3" ;
    rdfs:comment ":S1 {:p1 .|:p2 .,:p3 .} / { :s1 :p1 \"p1-0\"; :p2 \"p2-0\"; :p3 \"p3-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1dotOr2dot.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1p2p3.ttl> ;
      sht:focus <x>
    ] ;
    .

<#open1dotOropen2dotcloseclose_pass_p1> a sht:ValidationTest ;
    mf:name "open1dotOropen2dotcloseclose_pass_p1" ;
    rdfs:comment ":S1 {(:p1 .|(:p2 .,:p3 .))} / { :s1 :p1 \"p1-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/open1dotOropen2dotcloseclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <open1dotOropen2dotcloseclose_pass_p1.val>
    .

<#open1dotOropen2dotcloseclose_pass_p2p3> a sht:ValidationTest ;
    mf:name "open1dotOropen2dotcloseclose_pass_p2p3" ;
    rdfs:comment ":S1 {(:p1 .|(:p2 .,:p3 .))} / { :s1 :p2 \"p2-0\"; :p3 \"p3-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/open1dotOropen2dotcloseclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p2p3.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <open1dotOropen2dotcloseclose_pass_p2p3.val>
    .

<#open1dotOropen2dotcloseclose_fail_p1p2p3> a sht:ValidationFailure ;
    mf:name "open1dotOropen2dotcloseclose_fail_p1p2p3" ;
    rdfs:comment ":S1 {(:p1 .|(:p2 .,:p3 .))} / { :s1 :p1 \"p1-0\"; :p2 \"p2-0\"; :p3 \"p3-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/open1dotOropen2dotcloseclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1p2p3.ttl> ;
      sht:focus <x>
    ] ;
    .

<#openopen1dotOr1dotclose1dotclose_pass_p1p3> a sht:ValidationTest ;
    mf:name "openopen1dotOr1dotclose1dotclose_pass_p1p3" ;
    rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p1 \"p1-0\"; :p3 \"p3-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/openopen1dotOr1dotclose1dotclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1p3.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <openopen1dotOr1dotclose1dotclose_pass_p1p3.val>
    .

<#openopen1dotOr1dotclose1dotclose_pass_p2p3> a sht:ValidationTest ;
    mf:name "openopen1dotOr1dotclose1dotclose_pass_p2p3" ;
    rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p2 \"p2-0\"; :p3 \"p3-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/openopen1dotOr1dotclose1dotclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p2p3.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <openopen1dotOr1dotclose1dotclose_pass_p2p3.val>
    .


<#openopen1dotOr1dotclose1dotclose_fail_p1> a sht:ValidationFailure ;
    mf:name "openopen1dotOr1dotclose1dotclose_fail_p1" ;
    rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p1 \"p1-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/openopen1dotOr1dotclose1dotclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1.ttl> ;
      sht:focus <x>
    ] ;
    .

<#openopen1dotOr1dotclose1dotclose_fail_p3> a sht:ValidationFailure ;
    mf:name "openopen1dotOr1dotclose1dotclose_fail_p3" ;
    rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p3 \"p3-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/openopen1dotOr1dotclose1dotclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p3.ttl> ;
      sht:focus <x>
    ] ;
    .

<#openopen1dotOr1dotclose1dotclose_fail_p1p2> a sht:ValidationFailure ;
    mf:name "openopen1dotOr1dotclose1dotclose_fail_p1p2" ;
    rdfs:comment ":S1 { ((:p1 .| :p2 .), :p3 .) } / { <x> :p1 \"p1-0\"; :p2 \"p2-0\" . }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/openopen1dotOr1dotclose1dotclose.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <p1p2.ttl> ;
      sht:focus <x>
    ] ;
    .

# } algebraic operations
# value sets {

<#1val1dotMinusiri3_pass> a sht:ValidationTest ;
    mf:name "1val1dotMinusiri3_pass" ;
    rdfs:comment "<S> { <p1> (.-<v1>-<v2>-<v3>) } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1dotMinusiri3_pass.val>
    .

<#1val1dotMinusiri3_v1> a sht:ValidationFailure ;
    mf:name "1val1dotMinusiri3_v1" ;
    rdfs:comment "<S> { <p1> (.-<v1>-<v2>-<v3>) } on { <s1> <p1> <v1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1dotMinusiri3_v2> a sht:ValidationFailure ;
    mf:name "1val1dotMinusiri3_v2" ;
    rdfs:comment "<S> { <p1> (.-<v1>-<v2>-<v3>) } on { <s1> <p1> <v2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1dotMinusiri3_v3> a sht:ValidationFailure ;
    mf:name "1val1dotMinusiri3_v3" ;
    rdfs:comment "<S> { <p1> (.-<v1>-<v2>-<v3>) } on { <s> <p1> <v3> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv3.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1dotMinusiriStem3_pass> a sht:ValidationTest ;
    mf:name "1val1dotMinusiriStem3_pass" ;
    rdfs:comment "<S> { <p1> (.-<v1>~-<v2>~-<v3>~) } on { <s> <p1> <o1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Io1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1dotMinusiriStem3_pass.val>
    .

<#1val1dotMinusiriStem3_v1> a sht:ValidationFailure ;
    mf:name "1val1dotMinusiriStem3_v1" ;
    rdfs:comment "<S> { <p1> (.-<v1>~-<v2>~-<v3>~) } on { <s1> <p1> <v1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1dotMinusiriStem3_v2> a sht:ValidationFailure ;
    mf:name "1val1dotMinusiriStem3_v2" ;
    rdfs:comment "<S> { <p1> (.-<v1>~-<v2>~-<v3>~) } on { <s1> <p1> <v2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1dotMinusiriStem3_v3> a sht:ValidationFailure ;
    mf:name "1val1dotMinusiriStem3_v3" ;
    rdfs:comment "<S> { <p1> (.-<v1>~-<v2>~-<v3>~) } on { <s> <p1> <v3> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv3.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1dotMinusiriStem3_v1a> a sht:ValidationFailure ;
    mf:name "1val1dotMinusiriStem3_v1a" ;
    rdfs:comment "<S> { <p1> (.-<v1>~-<v2>~-<v3>~) } on { <s1> <p1> <v1a> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1dotMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1a.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStem_passv1> a sht:ValidationTest ;
    mf:name "1val1iriStem_passv1" ;
    rdfs:comment "<S> { <p1> (<v1>~) } on { <s> <p1> <v1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStem.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1iriStem_passv1.val>
    .

<#1val1iriStem_passv1a> a sht:ValidationTest ;
    mf:name "1val1iriStem_passv1a" ;
    rdfs:comment "<S> { <p1> (<v1>~) } on { <s> <p1> <v1a> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStem.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1a.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1iriStem_passv1a.val>
    .

<#1val1iriStem_fail> a sht:ValidationFailure ;
    mf:name "1val1iriStem_fail" ;
    rdfs:comment "<S> { <p1> (<v1>~) } on { <s1> <p1> <> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStem.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_I.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStemMinusiri3_passIv> a sht:ValidationTest ;
    mf:name "1val1iriStemMinusiri3_passIv" ;
    rdfs:comment "<S> { <p1> (<v>-<v1>-<v2>-<v3>) } on { <s> <p1> <v> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1iriStemMinusiri3_passIv.val>
    .

<#1val1iriStemMinusiri3_passIv4> a sht:ValidationTest ;
    mf:name "1val1iriStemMinusiri3_passIv4" ;
    rdfs:comment "<S> { <p1> (<v>-<v1>-<v2>-<v3>) } on { <s> <p1> <v4> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1iriStemMinusiri3_passIv4.val>
    .

<#1val1iriStemMinusiri3_v1> a sht:ValidationFailure ;
    mf:name "1val1iriStemMinusiri3_v1" ;
    rdfs:comment "<S> { <p1> (<v>-<v1>-<v2>-<v3>) } on { <s1> <p1> <v1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStemMinusiri3_v2> a sht:ValidationFailure ;
    mf:name "1val1iriStemMinusiri3_v2" ;
    rdfs:comment "<S> { <p1> (<v>-<v1>-<v2>-<v3>) } on { <s1> <p1> <v2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStemMinusiri3_v3> a sht:ValidationFailure ;
    mf:name "1val1iriStemMinusiri3_v3" ;
    rdfs:comment "<S> { <p1> (<v>-<v1>-<v2>-<v3>) } on { <s> <p1> <v3> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv3.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStemMinusiri3_passIv1a> a sht:ValidationTest ;
    mf:name "1val1iriStemMinusiri3_passIv1a" ;
    rdfs:comment "<S> { <p1> (<v>-<v1>-<v2>-<v3>) } on { <s> <p1> <v1a> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiri3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1a.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1iriStemMinusiri3_passIv1a.val>
    .

<#1val1iriStemMinusiriStem3_passIv> a sht:ValidationTest ;
    mf:name "1val1iriStemMinusiriStem3_passIv" ;
    rdfs:comment "<S> { <p1> (<v>~-<v1>~-<v2>~-<v3>~) } on { <s> <p1> <v> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1iriStemMinusiriStem3_passIv.val>
    .

<#1val1iriStemMinusiriStem3_passIv4> a sht:ValidationTest ;
    mf:name "1val1iriStemMinusiriStem3_passIv4" ;
    rdfs:comment "<S> { <p1> (<v>~-<v1>~-<v2>~-<v3>~) } on { <s> <p1> <v4> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv4.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1iriStemMinusiriStem3_passIv4.val>
    .

<#1val1iriStemMinusiriStem3_v1> a sht:ValidationFailure ;
    mf:name "1val1iriStemMinusiriStem3_v1" ;
    rdfs:comment "<S> { <p1> (<v>~-<v1>~-<v2>~-<v3>~) } on { <s1> <p1> <v1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStemMinusiriStem3_v2> a sht:ValidationFailure ;
    mf:name "1val1iriStemMinusiriStem3_v2" ;
    rdfs:comment "<S> { <p1> (<v>~-<v1>~-<v2>~-<v3>~) } on { <s1> <p1> <v2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStemMinusiriStem3_v3> a sht:ValidationFailure ;
    mf:name "1val1iriStemMinusiriStem3_v3" ;
    rdfs:comment "<S> { <p1> (<v>~-<v1>~-<v2>~-<v3>~) } on { <s> <p1> <v3> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv3.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1iriStemMinusiriStem3_v1a> a sht:ValidationFailure ;
    mf:name "1val1iriStemMinusiriStem3_v1a" ;
    rdfs:comment "<S> { <p1> (<v>~-<v1>~-<v2>~-<v3>~) } on { <s1> <p1> <v1a> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1iriStemMinusiriStem3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1a.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

# } value sets
# term equivalence {

<#1val1IRIREF_pass> a sht:ValidationTest ;
    mf:name "1val1IRIREF_pass" ;
    rdfs:comment "<S> { <p1> (<v1>) } on { <s> <p1> <v1> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1IRIREF.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv1.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1IRIREF_pass.val>
    .

<#1val1IRIREF_v2> a sht:ValidationFailure ;
    mf:name "1val1IRIREF_v2" ;
    rdfs:comment "<S> { <p1> (<v1>) } on { <s> <p1> <v2> }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1IRIREF.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Iv2.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1DOUBLE_pass> a sht:ValidationTest ;
    mf:name "1val1DOUBLE_pass" ;
    rdfs:comment "<S> { <p1> (0e0) } on { <s> <p1> 0e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1DOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL0e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1DOUBLE_pass.val>
    .

<#1val1DOUBLE_passUC> a sht:ValidationTest ;
    mf:name "1val1DOUBLE_passUC" ;
    rdfs:comment "<S> { <p1> (0e0) } on { <s> <p1> 0E0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1DOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL0e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1DOUBLE_pass.val>
    .

<#1val1DOUBLE_0_0e0> a sht:ValidationFailure ;
    mf:name "1val1DOUBLE_0_0e0" ;
    rdfs:comment "<S> { <p1> (0e0) } on { <s> <p1> 0e0.0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1DOUBLE.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL0_0e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1DOUBLElowercase_pass> a sht:ValidationTest ;
    mf:name "1val1DOUBLElowercase_pass" ;
    rdfs:comment "<S> { <p1> (0e0) } on { <s> <p1> 0e0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1DOUBLElowercase.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL0e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1DOUBLE_pass.val>
    .

<#1val1DOUBLElowercase_passUC> a sht:ValidationTest ;
    mf:name "1val1DOUBLElowercase_passUC" ;
    rdfs:comment "<S> { <p1> (0e0) } on { <s> <p1> 0E0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1DOUBLElowercase.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL0e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1DOUBLE_pass.val>
    .

<#1val1DOUBLElowercase_0_0e0> a sht:ValidationFailure ;
    mf:name "1val1DOUBLElowercase_0_0e0" ;
    rdfs:comment "<S> { <p1> (0e0) } on { <s> <p1> 0e0.0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1DOUBLElowercase.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_DBL0_0e0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1true_pass> a sht:ValidationTest ;
    mf:name "1val1true_pass" ;
    rdfs:comment "<S> { <p1> (true) } on { <s> <p1> true }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1true.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_true.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1true_pass.val>
    .

<#1val1true_false> a sht:ValidationFailure ;
    mf:name "1val1true_false" ;
    rdfs:comment "<S> { <p1> (true) } on { <s> <p1> false }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1true.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_false.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1true_ab> a sht:ValidationFailure ;
    mf:name "1val1true_ab" ;
    rdfs:comment "<S> { <p1> (true) } on { <s> <p1> ab }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1true.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1false_pass> a sht:ValidationTest ;
    mf:name "1val1false_pass" ;
    rdfs:comment "<S> { <p1> (false) } on { <s> <p1> true }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1false.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_false.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1false_pass.val>
    .

<#1val1false_true> a sht:ValidationFailure ;
    mf:name "1val1false_true" ;
    rdfs:comment "<S> { <p1> (false) } on { <s> <p1> false }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1false.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_true.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1false_ab> a sht:ValidationFailure ;
    mf:name "1val1false_ab" ;
    rdfs:comment "<S> { <p1> (false) } on { <s> <p1> ab }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1false.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

# } term equivalence
# numerics {

<#1val1INTEGER_pass> a sht:ValidationTest ;
    mf:name "1val1INTEGER_pass" ;
    rdfs:comment "<S> { <p1> (0) } on { <s> <p1> 0 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1INTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT0.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1INTEGER_pass.val>
    .

<#1val1INTEGER_Lab> a sht:ValidationFailure ;
    mf:name "1val1INTEGER_Lab" ;
    rdfs:comment "<S> { <p1> (0) } on { <s> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1INTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1INTEGER_00> a sht:ValidationFailure ;
    mf:name "1val1INTEGER_00" ;
    rdfs:comment "<S> { <p1> (0) } on { <s> <p1> 00 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1INTEGER.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_INT00.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

# } numerics
# datatypes {

<#1val1IRIREFDatatype_pass> a sht:ValidationTest ;
    mf:name "1val1IRIREFDatatype_pass" ;
    rdfs:comment "<S> { <p1> ('ab'^^my:bloodType) } on { <s> <p1> 'ab'^^my:bloodType }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1IRIREFDatatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_LabDTbloodType.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1IRIREFDatatype_pass.val>
    .

<#1val1IRIREFDatatype_Lab> a sht:ValidationFailure ;
    mf:name "1val1IRIREFDatatype_Lab" ;
    rdfs:comment "<S> { <p1> ('ab'^^my:bloodType) } on { <s> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1IRIREFDatatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1IRIREFDatatype_LabDTbloodType999> a sht:ValidationFailure ;
    mf:name "1val1IRIREFDatatype_LabDTbloodType999" ;
    rdfs:comment "<S> { <p1> ('ab'^^my:bloodType) } on { <s> <p1> 'ab'^^my:bloodType999 }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1IRIREFDatatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_LabDTbloodType999.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1IRIREFDatatype_LaDTbloodType> a sht:ValidationFailure ;
    mf:name "1val1IRIREFDatatype_LaDTbloodType" ;
    rdfs:comment "<S> { <p1> ('ab'^^my:bloodType) } on { <s> <p1> 'a'^^my:bloodType }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1IRIREFDatatype.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_LaDTbloodType.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

# } datatypes
# language tags {

<#1val1LANGTAG_pass> a sht:ValidationTest ;
    mf:name "1val1LANGTAG_pass" ;
    rdfs:comment "<S> { <p1> ('ab'@en-fr) } on { <s> <p1> 'ab'@en-fr }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1LANGTAG.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_LabLTen-fr.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1LANGTAG_pass.val>
    .

<#1val1LANGTAG_Lab> a sht:ValidationFailure ;
    mf:name "1val1LANGTAG_Lab" ;
    rdfs:comment "<S> { <p1> ('ab'@en-fr) } on { <s> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1LANGTAG.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1LANGTAG_LabLTen> a sht:ValidationFailure ;
    mf:name "1val1LANGTAG_LabLTen" ;
    rdfs:comment "<S> { <p1> ('ab'@en-fr) } on { <s> <p1> 'ab'@en }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1LANGTAG.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_LabLTen.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1LANGTAG_LabLTen-fr-jura> a sht:ValidationFailure ;
    mf:name "1val1LANGTAG_LabLTen-fr-jura" ;
    rdfs:comment "<S> { <p1> ('ab'@en-fr) } on { <s> <p1> 'ab'@en-fr-jura }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1LANGTAG.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_LabLTen-fr-jura.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1LANGTAG_LaLTen-fr> a sht:ValidationFailure ;
    mf:name "1val1LANGTAG_LaLTen-fr" ;
    rdfs:comment "<S> { <p1> ('ab'@en-fr) } on { <s> <p1> 'a'@en-fr }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1LANGTAG.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_LaLTen-fr.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

# } language tags
# AND valueExpr {

<#1val1vExprANDRef3_pass> a sht:ValidationTest ;
    mf:name "1val1vExprANDRef3_pass" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'abab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprANDRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Labab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprANDRef3_pass.val>
    .

<#1val1vExprANDRef3_failvc1> a sht:ValidationFailure ;
    mf:name "1val1vExprANDRef3_failvc1" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprANDRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprANDRef3_failvc2> a sht:ValidationFailure ;
    mf:name "1val1vExprANDRef3_failvc2" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ababab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprANDRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lababab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprANDRef3_failvc3> a sht:ValidationFailure ;
    mf:name "1val1vExprANDRef3_failvc3" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'baba' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprANDRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lbaba.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprRefAND3_pass> a sht:ValidationTest ;
    mf:name "1val1vExprRefAND3_pass" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'abab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Labab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprRefAND3_pass.val>
    .

<#1val1vExprRefAND3_failvc1> a sht:ValidationFailure ;
    mf:name "1val1vExprRefAND3_failvc1" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprRefAND3_failvc2> a sht:ValidationFailure ;
    mf:name "1val1vExprRefAND3_failvc2" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'ababab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lababab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprRefAND3_failvc3> a sht:ValidationFailure ;
    mf:name "1val1vExprRefAND3_failvc3" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> AND ... $<vc3> } on { <s1> <p1> 'baba' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lbaba.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprAND3_pass> a sht:ValidationTest ;
    mf:name "1val1vExprAND3_pass" ;
    rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '^(ab)+' } on { <s1> <p1> 'abab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Labab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprAND3_pass.val>
    .

<#1val1vExprAND3_failvc1> a sht:ValidationFailure ;
    mf:name "1val1vExprAND3_failvc1" ;
    rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '^(ab)+' } on { <s1> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprAND3_failvc2> a sht:ValidationFailure ;
    mf:name "1val1vExprAND3_failvc2" ;
    rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '^(ab)+' } on { <s1> <p1> 'ababab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lababab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprAND3_failvc3> a sht:ValidationFailure ;
    mf:name "1val1vExprAND3_failvc3" ;
    rdfs:comment "<S> { <p1> MINLENGTH 4 AND MAXLENGTH 5 AND ~ '^(ab)+' } on { <s1> <p1> 'baba' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprAND3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lbaba.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

# } AND valueExpr
# OR valueExpr {

<#1val1vExprORRef3_fail> a sht:ValidationFailure ;
    mf:name "1val1vExprORRef3_fail" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprORRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprORRef3_passvc1> a sht:ValidationTest ;
    mf:name "1val1vExprORRef3_passvc1" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprORRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprORRef3_passvc1.val>
    .

<#1val1vExprORRef3_passvc2> a sht:ValidationTest ;
    mf:name "1val1vExprORRef3_passvc2" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'cd' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprORRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lcd.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprORRef3_passvc2.val>
    .

<#1val1vExprORRef3_passvc3> a sht:ValidationTest ;
    mf:name "1val1vExprORRef3_passvc3" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ef' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprORRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lef.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprORRef3_passvc3.val>
    .

<#1val1vExprORRef3_passvc1vc2vc3> a sht:ValidationTest ;
    mf:name "1val1vExprORRef3_passvc1vc2vc3" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'abcdef' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprORRef3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Labcdef.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprORRef3_passvc1vc2vc3.val>
    .

<#1val1vExprRefOR3_fail> a sht:ValidationFailure ;
    mf:name "1val1vExprRefOR3_fail" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprRefOR3_passvc1> a sht:ValidationTest ;
    mf:name "1val1vExprRefOR3_passvc1" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprRefOR3_passvc1.val>
    .

<#1val1vExprRefOR3_passvc2> a sht:ValidationTest ;
    mf:name "1val1vExprRefOR3_passvc2" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'cd' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lcd.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprRefOR3_passvc2.val>
    .

<#1val1vExprRefOR3_passvc3> a sht:ValidationTest ;
    mf:name "1val1vExprRefOR3_passvc3" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'ef' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lef.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprRefOR3_passvc3.val>
    .

<#1val1vExprRefOR3_passvc1vc2vc3> a sht:ValidationTest ;
    mf:name "1val1vExprRefOR3_passvc1vc2vc3" ;
    rdfs:comment "$<vc1> = ... $<vc3> = ... <S> { <p1> $<vc1> OR ... $<vc3> } on { <s1> <p1> 'abcdef' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprRefOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Labcdef.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprRefOR3_passvc1vc2vc3.val>
    .

<#1val1vExprOR3_fail> a sht:ValidationFailure ;
    mf:name "1val1vExprOR3_fail" ;
    rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'a' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_La.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    .

<#1val1vExprOR3_passvc1> a sht:ValidationTest ;
    mf:name "1val1vExprOR3_passvc1" ;
    rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'ab' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lab.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprOR3_passvc1.val>
    .

<#1val1vExprOR3_passvc2> a sht:ValidationTest ;
    mf:name "1val1vExprOR3_passvc2" ;
    rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'cd' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lcd.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprOR3_passvc2.val>
    .

<#1val1vExprOR3_passvc3> a sht:ValidationTest ;
    mf:name "1val1vExprOR3_passvc3" ;
    rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'ef' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Lef.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprOR3_passvc3.val>
    .

<#1val1vExprOR3_passvc1vc2vc3> a sht:ValidationTest ;
    mf:name "1val1vExprOR3_passvc1vc2vc3" ;
    rdfs:comment "<S> { <p1> ~'^ab' OR ~'cd' OR ~'ef$' } on { <s1> <p1> 'abcdef' }" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../schemas/1val1vExprOR3.shex> ;
      sht:shape <http://a.example/S1> ;
      sht:data <Is1_Ip1_Labcdef.ttl> ;
      sht:focus <http://a.example/s1>
    ] ;
    mf:result <1val1vExprOR3_passvr1vr2vr3.val>
    .

# } OR valueExpr


# manual schemas {

<#iovka> a sht:ValidationTest ;
    mf:name "iovka" ;
    rdfs:comment "@@ iovka" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../validation/iovka.shex> ;
      sht:shape <S> ;
      sht:data <iovka.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <iovka.val>
    .

<#greedy> a sht:ValidationTest ;
    mf:name "greedy" ;
    rdfs:comment "@@ greedy" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../validation/greedy.shex> ;
      sht:shape <S> ;
      sht:data <greedy.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <greedy.val>
    .

<#skipped> a sht:ValidationTest ;
    mf:name "skipped" ;
    rdfs:comment "@@ skipped" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../validation/skipped.shex> ;
      sht:shape <S> ;
      sht:data <skipped.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <skipped.val>
    .

<#repeated-group> a sht:ValidationTest ;
    mf:name "repeated-group" ;
    rdfs:comment "@@ repeated-group" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../validation/repeated-group.shex> ;
      sht:shape <S> ;
      sht:data <repeated-group.ttl> ;
      sht:focus <x>
    ] ;
    mf:result <repeated-group.val>
    .

<#simple-group> a sht:ValidationTest ;
    mf:name "simple-group" ;
    rdfs:comment "@@ simple-group" ;
    mf:status mf:proposed ;
    mf:action [
      sht:schema <../validation/simple-group.shex> ;
      sht:shape <S> ;
      sht:data <simple-group.ttl> ;
      sht:focus <s0>
    ] ;
    mf:result <simple-group.val>
    .

# } manual schemas
